/*
*/
export class MembersFindRequest {
    constructor(search, role, status, sort, page, pageSize) {
        this.search = search;
        this.role = role;
        this.status = status;
        this.sort = sort;
        this.page = page;
        this.pageSize = pageSize;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVtYmVyc0ZpbmRSZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYm9va21lLWxpYi9zcmMvbGliL21lc3NhZ2VzL01lbWJlcnNGaW5kUmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFO0FBQ0YsTUFBTSxPQUFPLGtCQUFrQjtJQWdDM0IsWUFBWSxNQUFlLEVBQUUsSUFBd0IsRUFBRSxNQUEyQixFQUFFLElBQWEsRUFBRSxJQUFhLEVBQUUsUUFBaUI7UUFDL0gsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFPLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFLLENBQUM7UUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFPLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFLLENBQUM7UUFDbEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFLLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFTLENBQUM7SUFDOUIsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWVtYmVyU3RhdHVzQ29kZSB9IGZyb20gJy4uL2VudW1zL01lbWJlclN0YXR1c0NvZGUnO1xuaW1wb3J0IHsgQWNjb3VudFJvbGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvQWNjb3VudFJvbGVDb2RlJztcblxuLyogXG4qL1xuZXhwb3J0IGNsYXNzIE1lbWJlcnNGaW5kUmVxdWVzdCB7XG4gXG4gICAgLy8gRmlsdGVyIGJ5IHBhcnRpYWwgdXNlciBuYW1lIG9yIGVtYWlsIFxuICAgIFxuICAgIHB1YmxpYyBzZWFyY2g6IHN0cmluZztcbiAgICBcbiBcbiAgICAvLyBGaWx0ZXIgYnkgYWNjb3VudCByb2xlKHMpIFxuICAgIFxuICAgIHB1YmxpYyByb2xlOiBBY2NvdW50Um9sZUNvZGVbXTtcbiAgICBcbiBcbiAgICAvLyBGaWx0ZXIgYnkgbWVtYmVyIHN0YXR1cyhlcykgXG4gICAgXG4gICAgcHVibGljIHN0YXR1czogTWVtYmVyU3RhdHVzQ29kZVtdO1xuICAgIFxuIFxuICAgIC8vIFNvcnQgYnkgZmllbGQgYW5kIGRpcmVjdGlvbjogKGUuZy4gdGltZSsgPSBzb3J0IGJ5IHRpbWUgYXNjLCBpZC0gPSBzb3J0IGJ5IGlkIGRlc2MpIFxuICAgIFxuICAgIHB1YmxpYyBzb3J0OiBzdHJpbmc7XG4gICAgXG4gXG4gICAgLy8gUGFnZSBudW1iZXIgKGZvciBwYWdpbmF0aW9uKSBcbiAgICBcbiAgICBwdWJsaWMgcGFnZTogbnVtYmVyO1xuICAgIFxuIFxuICAgIC8vIE51bWJlciBvZiBpdGVtcyBwZXIgcGFnZSAoZm9yIHBhZ2luYXRpb24pIFxuICAgIFxuICAgIHB1YmxpYyBwYWdlU2l6ZTogbnVtYmVyO1xuICAgIFxuIFxuICAgIGNvbnN0cnVjdG9yKHNlYXJjaD86IHN0cmluZywgcm9sZT86IEFjY291bnRSb2xlQ29kZVtdLCBzdGF0dXM/OiBNZW1iZXJTdGF0dXNDb2RlW10sIHNvcnQ/OiBzdHJpbmcsIHBhZ2U/OiBudW1iZXIsIHBhZ2VTaXplPzogbnVtYmVyKSB7IFxuICAgICAgICB0aGlzLnNlYXJjaCA9IHNlYXJjaCE7XG4gICAgICAgIHRoaXMucm9sZSA9IHJvbGUhO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cyE7XG4gICAgICAgIHRoaXMuc29ydCA9IHNvcnQhO1xuICAgICAgICB0aGlzLnBhZ2UgPSBwYWdlITtcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IHBhZ2VTaXplITtcbiAgICB9XG5cbn1cblxuXG4vKlxuICogIEludGVyZmFjZSBvZiBNZW1iZXJzRmluZFJlcXVlc3RcbiovXG5leHBvcnQgaW50ZXJmYWNlIElNZW1iZXJzRmluZFJlcXVlc3Qge1xuIFxuICAgIC8vIEZpbHRlciBieSBwYXJ0aWFsIHVzZXIgbmFtZSBvciBlbWFpbCBcbiAgICBzZWFyY2g/OiBzdHJpbmc7XG4gXG4gICAgLy8gRmlsdGVyIGJ5IGFjY291bnQgcm9sZShzKSBcbiAgICByb2xlPzogQWNjb3VudFJvbGVDb2RlW107XG4gXG4gICAgLy8gRmlsdGVyIGJ5IG1lbWJlciBzdGF0dXMoZXMpIFxuICAgIHN0YXR1cz86IE1lbWJlclN0YXR1c0NvZGVbXTtcbiBcbiAgICAvLyBTb3J0IGJ5IGZpZWxkIGFuZCBkaXJlY3Rpb246IChlLmcuIHRpbWUrID0gc29ydCBieSB0aW1lIGFzYywgaWQtID0gc29ydCBieSBpZCBkZXNjKSBcbiAgICBzb3J0Pzogc3RyaW5nO1xuIFxuICAgIC8vIFBhZ2UgbnVtYmVyIChmb3IgcGFnaW5hdGlvbikgXG4gICAgcGFnZT86IG51bWJlcjtcbiBcbiAgICAvLyBOdW1iZXIgb2YgaXRlbXMgcGVyIHBhZ2UgKGZvciBwYWdpbmF0aW9uKSBcbiAgICBwYWdlU2l6ZT86IG51bWJlcjtcbiBcbn1cbiJdfQ==