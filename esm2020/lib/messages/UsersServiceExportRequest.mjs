/*
*/
export class UsersServiceExportRequest {
    constructor(search, type, status, sort, format, fields) {
        this.search = search;
        this.type = type;
        this.status = status;
        this.sort = sort;
        this.format = format;
        this.fields = fields;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlcnNTZXJ2aWNlRXhwb3J0UmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Jvb2ttZS1saWIvc3JjL2xpYi9tZXNzYWdlcy9Vc2Vyc1NlcnZpY2VFeHBvcnRSZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0U7QUFDRixNQUFNLE9BQU8seUJBQXlCO0lBZ0NsQyxZQUFZLE1BQWUsRUFBRSxJQUFxQixFQUFFLE1BQXlCLEVBQUUsSUFBYSxFQUFFLE1BQWUsRUFBRSxNQUFpQjtRQUM1SCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU8sQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUssQ0FBQztRQUNsQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU8sQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUssQ0FBQztRQUNsQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU8sQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU8sQ0FBQztJQUMxQixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyVHlwZUNvZGUgfSBmcm9tICcuLi9lbnVtcy9Vc2VyVHlwZUNvZGUnO1xuaW1wb3J0IHsgVXNlclN0YXR1c0NvZGUgfSBmcm9tICcuLi9lbnVtcy9Vc2VyU3RhdHVzQ29kZSc7XG5cbi8qIFxuKi9cbmV4cG9ydCBjbGFzcyBVc2Vyc1NlcnZpY2VFeHBvcnRSZXF1ZXN0IHtcbiBcbiAgICAvLyBGaWx0ZXIgYnkgbmFtZSBvciBwYXJ0aWFsIG5hbWUgb3IgaWQgXG4gICAgXG4gICAgcHVibGljIHNlYXJjaDogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIEZpbHRlciBieSB1c2VyIHR5cGUocykgKGVtcHR5IG9yIFVOREVGSU5FRCBmb3Igbm8gZmlsdGVyKSBcbiAgICBcbiAgICBwdWJsaWMgdHlwZTogVXNlclR5cGVDb2RlW107XG4gICAgXG4gXG4gICAgLy8gRmlsdGVyIGJ5IHVzZXIgc3RhdHVzKGVzKSAoZW1wdHkgb3IgVU5ERUZJTkVEIGZvciBubyBmaWx0ZXIpIFxuICAgIFxuICAgIHB1YmxpYyBzdGF0dXM6IFVzZXJTdGF0dXNDb2RlW107XG4gICAgXG4gXG4gICAgLy8gU29ydCBieSBmaWVsZCBhbmQgZGlyZWN0aW9uOiAoZS5nLiB0aW1lKyA9IHNvcnQgYnkgdGltZSBhc2MsIGlkLSA9IHNvcnQgYnkgaWQgZGVzYykgXG4gICAgXG4gICAgcHVibGljIHNvcnQ6IHN0cmluZztcbiAgICBcbiBcbiAgICAvLyBFeHBvcnQgcmVzdWx0cyB0byBhIGRpZmZlcmVudCBmb3JtYXQuIFN1cHBvcnRlZCBmb3JtYXRzOiBjc3YgfCBqc29uIHwgeG1sIFxuICAgIFxuICAgIHB1YmxpYyBmb3JtYXQ6IHN0cmluZztcbiAgICBcbiBcbiAgICAvLyBMaXN0IG9mIGZpZWxkcyB0byBleHBvcnQgKGxlYXZlIGVtcHR5IHRvIGV4cG9ydCBhbGwgZmllbGRzKSBcbiAgICBcbiAgICBwdWJsaWMgZmllbGRzOiBzdHJpbmdbXTtcbiAgICBcbiBcbiAgICBjb25zdHJ1Y3RvcihzZWFyY2g/OiBzdHJpbmcsIHR5cGU/OiBVc2VyVHlwZUNvZGVbXSwgc3RhdHVzPzogVXNlclN0YXR1c0NvZGVbXSwgc29ydD86IHN0cmluZywgZm9ybWF0Pzogc3RyaW5nLCBmaWVsZHM/OiBzdHJpbmdbXSkgeyBcbiAgICAgICAgdGhpcy5zZWFyY2ggPSBzZWFyY2ghO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlITtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXMhO1xuICAgICAgICB0aGlzLnNvcnQgPSBzb3J0ITtcbiAgICAgICAgdGhpcy5mb3JtYXQgPSBmb3JtYXQhO1xuICAgICAgICB0aGlzLmZpZWxkcyA9IGZpZWxkcyE7XG4gICAgfVxuXG59XG5cblxuLypcbiAqICBJbnRlcmZhY2Ugb2YgVXNlcnNTZXJ2aWNlRXhwb3J0UmVxdWVzdFxuKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVVzZXJzU2VydmljZUV4cG9ydFJlcXVlc3Qge1xuIFxuICAgIC8vIEZpbHRlciBieSBuYW1lIG9yIHBhcnRpYWwgbmFtZSBvciBpZCBcbiAgICBzZWFyY2g/OiBzdHJpbmc7XG4gXG4gICAgLy8gRmlsdGVyIGJ5IHVzZXIgdHlwZShzKSAoZW1wdHkgb3IgVU5ERUZJTkVEIGZvciBubyBmaWx0ZXIpIFxuICAgIHR5cGU/OiBVc2VyVHlwZUNvZGVbXTtcbiBcbiAgICAvLyBGaWx0ZXIgYnkgdXNlciBzdGF0dXMoZXMpIChlbXB0eSBvciBVTkRFRklORUQgZm9yIG5vIGZpbHRlcikgXG4gICAgc3RhdHVzPzogVXNlclN0YXR1c0NvZGVbXTtcbiBcbiAgICAvLyBTb3J0IGJ5IGZpZWxkIGFuZCBkaXJlY3Rpb246IChlLmcuIHRpbWUrID0gc29ydCBieSB0aW1lIGFzYywgaWQtID0gc29ydCBieSBpZCBkZXNjKSBcbiAgICBzb3J0Pzogc3RyaW5nO1xuIFxuICAgIC8vIEV4cG9ydCByZXN1bHRzIHRvIGEgZGlmZmVyZW50IGZvcm1hdC4gU3VwcG9ydGVkIGZvcm1hdHM6IGNzdiB8IGpzb24gfCB4bWwgXG4gICAgZm9ybWF0Pzogc3RyaW5nO1xuIFxuICAgIC8vIExpc3Qgb2YgZmllbGRzIHRvIGV4cG9ydCAobGVhdmUgZW1wdHkgdG8gZXhwb3J0IGFsbCBmaWVsZHMpIFxuICAgIGZpZWxkcz86IHN0cmluZ1tdO1xuIFxufVxuIl19