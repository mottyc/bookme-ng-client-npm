import { BaseEntity } from '../entities/BaseEntity';
/*
 *  User membership in an account
*/
export class Member extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVtYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYm9va21lLWxpYi9zcmMvbGliL2VudGl0aWVzL01lbWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFHcEQ7O0VBRUU7QUFDRixNQUFNLE9BQU8sTUFBTyxTQUFRLFVBQVU7Q0F1R3JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWNjb3VudFJvbGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvQWNjb3VudFJvbGVDb2RlJztcbmltcG9ydCB7IE1lbWJlclN0YXR1c0NvZGUgfSBmcm9tICcuLi9lbnVtcy9NZW1iZXJTdGF0dXNDb2RlJztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuLi9lbnRpdGllcy9CYXNlRW50aXR5JztcbmltcG9ydCB7IElCYXNlRW50aXR5IH0gZnJvbSAnLi4vZW50aXRpZXMvQmFzZUVudGl0eSc7XG5cbi8qIFxuICogIFVzZXIgbWVtYmVyc2hpcCBpbiBhbiBhY2NvdW50XG4qL1xuZXhwb3J0IGNsYXNzIE1lbWJlciBleHRlbmRzIEJhc2VFbnRpdHkge1xuIFxuICAgIC8vIFVzZXIgSWQgXG4gICAgXG4gICAgcHVibGljIHVzZXJJZDogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIEFjY291bnQgSWQgXG4gICAgXG4gICAgcHVibGljIGFjY291bnRJZDogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIFVzZXIgdHlwZTogVU5ERUZJTkVEIHwgU1lTQURNSU4gfCBTVVBQT1JUIHwgVVNFUiBcbiAgICBcbiAgICBwdWJsaWMgYWNjb3VudFJvbGU6IEFjY291bnRSb2xlQ29kZTtcbiAgICBcbiBcbiAgICAvLyBNZW1iZXIgc3RhdHVzOiBVTkRFRklORUQgfCBQRU5ESU5HIHwgQUNUSVZFIHwgRlJPWkVOIFxuICAgIFxuICAgIHB1YmxpYyBzdGF0dXM6IE1lbWJlclN0YXR1c0NvZGU7XG4gICAgXG4gXG4gICAgLy8gTWVtYmVyIGluIHRoZSBjbHViIHNpbmNlIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBcbiAgICBwdWJsaWMgbWVtYmVyU2luY2U6IG51bWJlcjtcbiAgICBcbiBcbiAgICAvLyBNZW1iZXJzaGlwIGV4cGlyYXRpb24gW0Vwb2NoIG1pbGxpc2Vjb25kcyBUaW1lc3RhbXBdIFxuICAgIFxuICAgIHB1YmxpYyBleHBpcmF0aW9uOiBudW1iZXI7XG4gICAgXG4gXG4gICAgLy8gTWVtYmVyIGxldmVsIFsxLDIsM10gXG4gICAgXG4gICAgcHVibGljIGxldmVsOiBudW1iZXI7XG4gICAgXG4gXG4gICAgLy8gTWVtYmVyIGNhbiBiZSBjb3ggPyBcbiAgICBcbiAgICBwdWJsaWMgaXNDb3g6IGJvb2xlYW47XG4gICAgXG4gXG4gICAgLy8gTWVtYmVyIGNhbiBiZSBtZW50b3IgPyBcbiAgICBcbiAgICBwdWJsaWMgaXNNZW50b3I6IGJvb2xlYW47XG4gICAgXG4gXG4gICAgLy8gVHJhaW5pbmcgdGltZSBbbWludXRlc10gXG4gICAgXG4gICAgcHVibGljIHRyYWluaW5nVGltZTogbnVtYmVyO1xuICAgIFxuIFxuICAgIC8vIFJlc3RyaWN0aW9ucyBcbiAgICBcbiAgICBwdWJsaWMgcmVzdHJpY3Rpb25zOiBzdHJpbmc7XG4gICAgXG4gXG4gICAgLy8gUHJlZmVycmVkIHJlc291cmNlcyBmb3IgYm9va2luZyBhIHNpbmdsZSBbb3JkZXJlZCBsaXN0XSBcbiAgICBcbiAgICBwdWJsaWMgcHJlZmVycmVkMTogc3RyaW5nW107XG4gICAgXG4gXG4gICAgLy8gUHJlZmVycmVkIHJlc291cmNlcyBmb3IgYm9va2luZyBhIGRvdWJsZSBbb3JkZXJlZCBsaXN0XSBcbiAgICBcbiAgICBwdWJsaWMgcHJlZmVycmVkMjogc3RyaW5nW107XG4gICAgXG4gXG4gICAgLy8gUHJlZmVycmVkIHJlc291cmNlcyBmb3IgYm9va2luZyBhIHF1YWQgW29yZGVyZWQgbGlzdF0gXG4gICAgXG4gICAgcHVibGljIHByZWZlcnJlZDQ6IHN0cmluZ1tdO1xuICAgIFxuIFxuICAgIC8vIFByZWZlcnJlZCByZXNvdXJjZXMgZm9yIGJvb2tpbmcgYW4gZWlnaHQgW29yZGVyZWQgbGlzdF0gXG4gICAgXG4gICAgcHVibGljIHByZWZlcnJlZDg6IHN0cmluZ1tdO1xuICAgIFxuIFxuICAgIC8vIElzIHRoaXMgYWNjb3VudCBhY3Rpdml0aWVzIHNob3VsZCBub3QgYmUgdmlzaWJsZSB0byB0aGUgYWdncmVnYXRlZCBhY3Rpdml0eSBsaXN0ID8gXG4gICAgXG4gICAgcHVibGljIGlzSGlkZGVuOiBib29sZWFuO1xuICAgIFxuIFxuICAgIC8vIE1lbWJlciBzY29yZSAoYmFzZWQgb24gYWJzZW5jZXMgYW5kIGluY2lkZW50cyBpbiB0aGUgbGFzdCAxODAgZGF5cykgXG4gICAgXG4gICAgcHVibGljIHNjb3JlOiBudW1iZXI7XG4gICAgXG4gXG4gICAgLy8gRW50aXR5IElkIFxuICAgIFxuICAgIHB1YmxpYyBvdmVycmlkZSBpZDogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgY3JlYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgXG4gICAgcHVibGljIG92ZXJyaWRlIGNyZWF0ZWRPbjogbnVtYmVyO1xuICAgIFxuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgdXBkYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgXG4gICAgcHVibGljIG92ZXJyaWRlIHVwZGF0ZWRPbjogbnVtYmVyO1xuICAgIFxuIFxuXG59XG5cblxuLypcbiAqICBJbnRlcmZhY2Ugb2YgTWVtYmVyXG4qL1xuZXhwb3J0IGludGVyZmFjZSBJTWVtYmVyIGV4dGVuZHMgSUJhc2VFbnRpdHkge1xuIFxuICAgIC8vIFVzZXIgSWQgXG4gICAgdXNlcklkPzogc3RyaW5nO1xuIFxuICAgIC8vIEFjY291bnQgSWQgXG4gICAgYWNjb3VudElkPzogc3RyaW5nO1xuIFxuICAgIC8vIFVzZXIgdHlwZTogVU5ERUZJTkVEIHwgU1lTQURNSU4gfCBTVVBQT1JUIHwgVVNFUiBcbiAgICBhY2NvdW50Um9sZT86IEFjY291bnRSb2xlQ29kZTtcbiBcbiAgICAvLyBNZW1iZXIgc3RhdHVzOiBVTkRFRklORUQgfCBQRU5ESU5HIHwgQUNUSVZFIHwgRlJPWkVOIFxuICAgIHN0YXR1cz86IE1lbWJlclN0YXR1c0NvZGU7XG4gXG4gICAgLy8gTWVtYmVyIGluIHRoZSBjbHViIHNpbmNlIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBtZW1iZXJTaW5jZT86IG51bWJlcjtcbiBcbiAgICAvLyBNZW1iZXJzaGlwIGV4cGlyYXRpb24gW0Vwb2NoIG1pbGxpc2Vjb25kcyBUaW1lc3RhbXBdIFxuICAgIGV4cGlyYXRpb24/OiBudW1iZXI7XG4gXG4gICAgLy8gTWVtYmVyIGxldmVsIFsxLDIsM10gXG4gICAgbGV2ZWw/OiBudW1iZXI7XG4gXG4gICAgLy8gTWVtYmVyIGNhbiBiZSBjb3ggPyBcbiAgICBpc0NveD86IGJvb2xlYW47XG4gXG4gICAgLy8gTWVtYmVyIGNhbiBiZSBtZW50b3IgPyBcbiAgICBpc01lbnRvcj86IGJvb2xlYW47XG4gXG4gICAgLy8gVHJhaW5pbmcgdGltZSBbbWludXRlc10gXG4gICAgdHJhaW5pbmdUaW1lPzogbnVtYmVyO1xuIFxuICAgIC8vIFJlc3RyaWN0aW9ucyBcbiAgICByZXN0cmljdGlvbnM/OiBzdHJpbmc7XG4gXG4gICAgLy8gUHJlZmVycmVkIHJlc291cmNlcyBmb3IgYm9va2luZyBhIHNpbmdsZSBbb3JkZXJlZCBsaXN0XSBcbiAgICBwcmVmZXJyZWQxPzogc3RyaW5nW107XG4gXG4gICAgLy8gUHJlZmVycmVkIHJlc291cmNlcyBmb3IgYm9va2luZyBhIGRvdWJsZSBbb3JkZXJlZCBsaXN0XSBcbiAgICBwcmVmZXJyZWQyPzogc3RyaW5nW107XG4gXG4gICAgLy8gUHJlZmVycmVkIHJlc291cmNlcyBmb3IgYm9va2luZyBhIHF1YWQgW29yZGVyZWQgbGlzdF0gXG4gICAgcHJlZmVycmVkND86IHN0cmluZ1tdO1xuIFxuICAgIC8vIFByZWZlcnJlZCByZXNvdXJjZXMgZm9yIGJvb2tpbmcgYW4gZWlnaHQgW29yZGVyZWQgbGlzdF0gXG4gICAgcHJlZmVycmVkOD86IHN0cmluZ1tdO1xuIFxuICAgIC8vIElzIHRoaXMgYWNjb3VudCBhY3Rpdml0aWVzIHNob3VsZCBub3QgYmUgdmlzaWJsZSB0byB0aGUgYWdncmVnYXRlZCBhY3Rpdml0eSBsaXN0ID8gXG4gICAgaXNIaWRkZW4/OiBib29sZWFuO1xuIFxuICAgIC8vIE1lbWJlciBzY29yZSAoYmFzZWQgb24gYWJzZW5jZXMgYW5kIGluY2lkZW50cyBpbiB0aGUgbGFzdCAxODAgZGF5cykgXG4gICAgc2NvcmU/OiBudW1iZXI7XG4gXG4gICAgLy8gRW50aXR5IElkIFxuICAgIGlkPzogc3RyaW5nO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgY3JlYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgY3JlYXRlZE9uPzogbnVtYmVyO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgdXBkYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgdXBkYXRlZE9uPzogbnVtYmVyO1xuIFxufVxuIl19