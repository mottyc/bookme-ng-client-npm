import { BaseEntity } from '../entities/BaseEntity';
/*
 *  Account entity in the system represents a club
*/
export class Account extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Jvb2ttZS1saWIvc3JjL2xpYi9lbnRpdGllcy9BY2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUtwRDs7RUFFRTtBQUNGLE1BQU0sT0FBTyxPQUFRLFNBQVEsVUFBVTtDQW1GdEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY2NvdW50U2V0dGluZ3MgfSBmcm9tICcuLi9jb21tb24vQWNjb3VudFNldHRpbmdzJztcbmltcG9ydCB7IFJlc291cmNlQ2xhc3NDb2RlIH0gZnJvbSAnLi4vZW51bXMvUmVzb3VyY2VDbGFzc0NvZGUnO1xuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJy4uL2VudGl0aWVzL0Jhc2VFbnRpdHknO1xuaW1wb3J0IHsgQWNjb3VudFR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvQWNjb3VudFR5cGVDb2RlJztcbmltcG9ydCB7IEFjY291bnRTdGF0dXNDb2RlIH0gZnJvbSAnLi4vZW51bXMvQWNjb3VudFN0YXR1c0NvZGUnO1xuaW1wb3J0IHsgSUJhc2VFbnRpdHkgfSBmcm9tICcuLi9lbnRpdGllcy9CYXNlRW50aXR5JztcblxuLyogXG4gKiAgQWNjb3VudCBlbnRpdHkgaW4gdGhlIHN5c3RlbSByZXByZXNlbnRzIGEgY2x1YlxuKi9cbmV4cG9ydCBjbGFzcyBBY2NvdW50IGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQWNjb3VudCBuYW1lIFxuICAgIFxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gICAgXG4gXG4gICAgLy8gQWNjb3VudCBUeXBlOiBVTkRFRklORUQgfCBERU1PIHwgVFJJQUwgfCBQQVJUTkVSIHwgQ1VTVE9NRVIgXG4gICAgXG4gICAgcHVibGljIHR5cGU6IEFjY291bnRUeXBlQ29kZTtcbiAgICBcbiBcbiAgICAvLyBBY2NvdW50IHN0YXR1czogVU5ERUZJTkVEIHwgQUNUSVZFIHwgU1VTUEVOREVEIFxuICAgIFxuICAgIHB1YmxpYyBzdGF0dXM6IEFjY291bnRTdGF0dXNDb2RlO1xuICAgIFxuIFxuICAgIC8vIFdoZW4gdGhlIGFjY291bnQgd2FzIHN1c3BlbmRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gc2Vjb25kIGlubGluZSBmaWVsZCBkb2N1bWVudGF0aW9uIFxuICAgIFxuICAgIHB1YmxpYyBzdXNwZW5kZWRPbjogbnVtYmVyO1xuICAgIFxuIFxuICAgIC8vIExpc3Qgb2YgYXNzb2NpYXRlZCBhY2NvdW50IGdyb3VwcyAoZm9yIGZlYXR1cmUgdG9nZ2xlKSBcbiAgICBcbiAgICBwdWJsaWMgZ3JvdXBzOiBzdHJpbmdbXTtcbiAgICBcbiBcbiAgICAvLyBBY2NvdW50IHRpbWV6b25lIChJQU5BIGZvcm1hdCwgZGVmYXVsdCBpcyBVVEMpIFxuICAgIFxuICAgIHB1YmxpYyB0aW1lem9uZTogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIFdoZW4gdGhlIGFjY291bnQgd2lsbCBiZSBleHBpcmVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSAoMCBtZWFucyBubyBleHBpcmF0aW9uIHRpbWUpIFxuICAgIFxuICAgIHB1YmxpYyBleHBpcmVkT246IG51bWJlcjtcbiAgICBcbiBcbiAgICAvLyBBY2NvdW50IGRlc2NyaXB0aW9uIFxuICAgIFxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIElmIHRydWUsIG5vIGFwcHJvdmFsIGZvciByZXNvdXJjZSBhbGxvY2F0aW9uIGJ5IHRoZSBhY2NvdW50IGFkbWluIGlzIHJlcXVpcmVkIFxuICAgIFxuICAgIHB1YmxpYyBhdXRvQXBwcm92ZTogYm9vbGVhbjtcbiAgICBcbiBcbiAgICAvLyBBY2NvdW50IHNwZWNpZmljIHNldHRpbmdzIFxuICAgIFxuICAgIHB1YmxpYyBzZXR0aW5nczogQWNjb3VudFNldHRpbmdzO1xuICAgIFxuIFxuICAgIC8vIFJlc291cmNlIGNsYXNzIG1hbmFnZWQgaW4gdGhlIGFjY291bnQgKGJvYXQsIGtheWFrLi4uKSBcbiAgICBcbiAgICBwdWJsaWMgcmVzb3VyY2VDbGFzczogUmVzb3VyY2VDbGFzc0NvZGU7XG4gICAgXG4gXG4gICAgLy8gRGVmYXVsdCBhY2NvdW50IGFjdGl2aXR5IGljb24gXG4gICAgXG4gICAgcHVibGljIGljb246IHN0cmluZztcbiAgICBcbiBcbiAgICAvLyBEZWZhdWx0IGFjY291bnQgYWN0aXZpdHkgaWNvbiBjb2xvciBcbiAgICBcbiAgICBwdWJsaWMgaWNvbkNvbG9yOiBzdHJpbmc7XG4gICAgXG4gXG4gICAgLy8gRW50aXR5IElkIFxuICAgIFxuICAgIHB1YmxpYyBvdmVycmlkZSBpZDogc3RyaW5nO1xuICAgIFxuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgY3JlYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgXG4gICAgcHVibGljIG92ZXJyaWRlIGNyZWF0ZWRPbjogbnVtYmVyO1xuICAgIFxuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgdXBkYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgXG4gICAgcHVibGljIG92ZXJyaWRlIHVwZGF0ZWRPbjogbnVtYmVyO1xuICAgIFxuIFxuXG59XG5cblxuLypcbiAqICBJbnRlcmZhY2Ugb2YgQWNjb3VudFxuKi9cbmV4cG9ydCBpbnRlcmZhY2UgSUFjY291bnQgZXh0ZW5kcyBJQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQWNjb3VudCBuYW1lIFxuICAgIG5hbWU/OiBzdHJpbmc7XG4gXG4gICAgLy8gQWNjb3VudCBUeXBlOiBVTkRFRklORUQgfCBERU1PIHwgVFJJQUwgfCBQQVJUTkVSIHwgQ1VTVE9NRVIgXG4gICAgdHlwZT86IEFjY291bnRUeXBlQ29kZTtcbiBcbiAgICAvLyBBY2NvdW50IHN0YXR1czogVU5ERUZJTkVEIHwgQUNUSVZFIHwgU1VTUEVOREVEIFxuICAgIHN0YXR1cz86IEFjY291bnRTdGF0dXNDb2RlO1xuIFxuICAgIC8vIFdoZW4gdGhlIGFjY291bnQgd2FzIHN1c3BlbmRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gc2Vjb25kIGlubGluZSBmaWVsZCBkb2N1bWVudGF0aW9uIFxuICAgIHN1c3BlbmRlZE9uPzogbnVtYmVyO1xuIFxuICAgIC8vIExpc3Qgb2YgYXNzb2NpYXRlZCBhY2NvdW50IGdyb3VwcyAoZm9yIGZlYXR1cmUgdG9nZ2xlKSBcbiAgICBncm91cHM/OiBzdHJpbmdbXTtcbiBcbiAgICAvLyBBY2NvdW50IHRpbWV6b25lIChJQU5BIGZvcm1hdCwgZGVmYXVsdCBpcyBVVEMpIFxuICAgIHRpbWV6b25lPzogc3RyaW5nO1xuIFxuICAgIC8vIFdoZW4gdGhlIGFjY291bnQgd2lsbCBiZSBleHBpcmVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSAoMCBtZWFucyBubyBleHBpcmF0aW9uIHRpbWUpIFxuICAgIGV4cGlyZWRPbj86IG51bWJlcjtcbiBcbiAgICAvLyBBY2NvdW50IGRlc2NyaXB0aW9uIFxuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuIFxuICAgIC8vIElmIHRydWUsIG5vIGFwcHJvdmFsIGZvciByZXNvdXJjZSBhbGxvY2F0aW9uIGJ5IHRoZSBhY2NvdW50IGFkbWluIGlzIHJlcXVpcmVkIFxuICAgIGF1dG9BcHByb3ZlPzogYm9vbGVhbjtcbiBcbiAgICAvLyBBY2NvdW50IHNwZWNpZmljIHNldHRpbmdzIFxuICAgIHNldHRpbmdzPzogQWNjb3VudFNldHRpbmdzO1xuIFxuICAgIC8vIFJlc291cmNlIGNsYXNzIG1hbmFnZWQgaW4gdGhlIGFjY291bnQgKGJvYXQsIGtheWFrLi4uKSBcbiAgICByZXNvdXJjZUNsYXNzPzogUmVzb3VyY2VDbGFzc0NvZGU7XG4gXG4gICAgLy8gRGVmYXVsdCBhY2NvdW50IGFjdGl2aXR5IGljb24gXG4gICAgaWNvbj86IHN0cmluZztcbiBcbiAgICAvLyBEZWZhdWx0IGFjY291bnQgYWN0aXZpdHkgaWNvbiBjb2xvciBcbiAgICBpY29uQ29sb3I/OiBzdHJpbmc7XG4gXG4gICAgLy8gRW50aXR5IElkIFxuICAgIGlkPzogc3RyaW5nO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgY3JlYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgY3JlYXRlZE9uPzogbnVtYmVyO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgdXBkYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgdXBkYXRlZE9uPzogbnVtYmVyO1xuIFxufVxuIl19