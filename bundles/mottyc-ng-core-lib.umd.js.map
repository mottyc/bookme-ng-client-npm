{"version":3,"file":"mottyc-ng-core-lib.umd.js","sources":["../../../projects/ng-core-lib/src/lib/common/AbsoluteTimeFrame.ts","../../../projects/ng-core-lib/src/lib/common/AccountRole.ts","../../../projects/ng-core-lib/src/lib/common/AccountSettings.ts","../../../projects/ng-core-lib/src/lib/common/LoginData.ts","../../../projects/ng-core-lib/src/lib/common/LoginParams.ts","../../../projects/ng-core-lib/src/lib/common/MemberRegistration.ts","../../../projects/ng-core-lib/src/lib/common/RecurrentActivity.ts","../../../projects/ng-core-lib/src/lib/common/RecurrentTimeFrame.ts","../../../projects/ng-core-lib/src/lib/common/StringKeyValue.ts","../../../projects/ng-core-lib/src/lib/common/TimeFrame.ts","../../../projects/ng-core-lib/src/lib/common/UserAccountInfo.ts","../../../projects/ng-core-lib/src/lib/common/UserInvitation.ts","../../../projects/ng-core-lib/src/lib/common/UserRegistration.ts","../../../projects/ng-core-lib/src/lib/common/WeightRange.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-core-lib/src/lib/entities/BaseEntity.ts","../../../projects/ng-core-lib/src/lib/entities/Account.ts","../../../projects/ng-core-lib/src/lib/entities/Activity.ts","../../../projects/ng-core-lib/src/lib/entities/ActivityBookingGroup.ts","../../../projects/ng-core-lib/src/lib/entities/ApiKey.ts","../../../projects/ng-core-lib/src/lib/entities/AuditLog.ts","../../../projects/ng-core-lib/src/lib/entities/Booking.ts","../../../projects/ng-core-lib/src/lib/entities/BookingGroup.ts","../../../projects/ng-core-lib/src/lib/entities/BookingRequest.ts","../../../projects/ng-core-lib/src/lib/entities/Feature.ts","../../../projects/ng-core-lib/src/lib/entities/FeaturesGroup.ts","../../../projects/ng-core-lib/src/lib/entities/Incident.ts","../../../projects/ng-core-lib/src/lib/entities/Member.ts","../../../projects/ng-core-lib/src/lib/entities/MemberUser.ts","../../../projects/ng-core-lib/src/lib/entities/Membership.ts","../../../projects/ng-core-lib/src/lib/entities/Placement.ts","../../../projects/ng-core-lib/src/lib/entities/Planing.ts","../../../projects/ng-core-lib/src/lib/entities/Resource.ts","../../../projects/ng-core-lib/src/lib/entities/User.ts","../../../projects/ng-core-lib/src/lib/entities/Verification.ts","../../../projects/ng-core-lib/src/lib/enums/AccountRoleCode.ts","../../../projects/ng-core-lib/src/lib/enums/AccountStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/AccountTypeCode.ts","../../../projects/ng-core-lib/src/lib/enums/ActivityStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/BookingStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/DayOfWeekCode.ts","../../../projects/ng-core-lib/src/lib/enums/EntityTypeCode.ts","../../../projects/ng-core-lib/src/lib/enums/FeatureCode.ts","../../../projects/ng-core-lib/src/lib/enums/KayakTypeCode.ts","../../../projects/ng-core-lib/src/lib/enums/MemberStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/PlacementStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/ResourceClassCode.ts","../../../projects/ng-core-lib/src/lib/enums/ResourceStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/ResourceTypeMask.ts","../../../projects/ng-core-lib/src/lib/enums/RowingBoatTypeCode.ts","../../../projects/ng-core-lib/src/lib/enums/TimeUnitCode.ts","../../../projects/ng-core-lib/src/lib/enums/UserGenderCode.ts","../../../projects/ng-core-lib/src/lib/enums/UserStatusCode.ts","../../../projects/ng-core-lib/src/lib/enums/UserTypeCode.ts","../../../projects/ng-core-lib/src/lib/messages/AccountIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/ActionResponse.ts","../../../projects/ng-core-lib/src/lib/messages/ActivityIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminAccountSettingsUpdateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminActivityBulkCreateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminActivityDefaultCreateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminActivityDefaultDeleteRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminActivityFindFreeResourcesRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminActivityFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminActivityPlaningRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminCreateActivityRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminCreateResourceRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminDailyPlaningExportRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminDailyPlaningRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminFindFreeResourcesRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminMembersFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminPlaningAssignResourceRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminPlaningDeleteActivityRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminPlaningDeleteBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminPlaningMergeBookingsRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminPlaningSplitBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminPlaningUnAssignResourceRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminResourceBulkCreateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminResourceFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminUpdateActivityRequest.ts","../../../projects/ng-core-lib/src/lib/messages/AdminUpdateResourceRequest.ts","../../../projects/ng-core-lib/src/lib/messages/BookingIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/BookingRequestIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/ChangePasswordRequest.ts","../../../projects/ng-core-lib/src/lib/messages/EmptyRequest.ts","../../../projects/ng-core-lib/src/lib/messages/EmptyResponse.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponse.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfAccount.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfActivity.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfActivityBookingGroup.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfBooking.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfBookingGroup.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfMembership.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfPlacement.ts","../../../projects/ng-core-lib/src/lib/messages/EntitiesResponseOfResource.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponse.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfAccount.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfAccountSettings.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfActivity.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfBooking.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfLoginData.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfMember.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfMemberUser.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfPlacement.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfPlaning.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfResource.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfUser.ts","../../../projects/ng-core-lib/src/lib/messages/EntityResponseOfUserAccountInfo.ts","../../../projects/ng-core-lib/src/lib/messages/MemberIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/MembersBulkImportRequest.ts","../../../projects/ng-core-lib/src/lib/messages/MembersFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/MembersServiceInviteRequest.ts","../../../projects/ng-core-lib/src/lib/messages/MembersServiceUpdateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/MembershipIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/MembershipsRequest.ts","../../../projects/ng-core-lib/src/lib/messages/PlacementIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponse.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfAccount.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfActivity.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfBooking.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfMemberUser.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfMembership.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfPlacement.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfResource.ts","../../../projects/ng-core-lib/src/lib/messages/QueryResponseOfUser.ts","../../../projects/ng-core-lib/src/lib/messages/ResourceIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/StreamResponse.ts","../../../projects/ng-core-lib/src/lib/messages/SysAdminAccountCreateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/SysAdminAccountResetRequest.ts","../../../projects/ng-core-lib/src/lib/messages/SysAdminAccountUpdateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/SysAdminAccountsFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/TokenRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserAccountsFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserBookingFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserBookingGroupRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserBookingRequestFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserByEmailRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserCreateBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserCreateBookingRequestRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserCreatePlacementRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserIdRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserIdsRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserPlacementFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceChangeMobileRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceChangeNameRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceChangePasswordRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceCheckPasswordRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceLoginRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceResetPasswordRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceSendVerificationRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceSwitchAccountRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceUpdateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserServiceVerifyLoginRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserTokenRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserUpdateBookingRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserUpdateBookingRequestRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UserUpdatePlacementRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceChangeDefaultAccountRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceChangeMobileRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceChangeNameRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceChangeRoleRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceChangeStatusRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceChangeTypeRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceCreateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceExportRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceFindRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceInviteRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceSetRolesRequest.ts","../../../projects/ng-core-lib/src/lib/messages/UsersServiceUpdateRequest.ts","../../../projects/ng-core-lib/src/lib/messages/WebSocketMessageHeader.ts","../../../projects/ng-core-lib/src/utils/localStorage-util.ts","../../../projects/ng-core-lib/src/utils/rest-util.ts","../../../projects/ng-core-lib/src/config.ts","../../../projects/ng-core-lib/src/lib/services/adminAccountService.ts","../../../projects/ng-core-lib/src/lib/services/adminActivitiesService.ts","../../../projects/ng-core-lib/src/lib/services/adminMembersService.ts","../../../projects/ng-core-lib/src/lib/services/adminPlaningService.ts","../../../projects/ng-core-lib/src/lib/services/adminResourcesService.ts","../../../projects/ng-core-lib/src/lib/services/healthCheckService.ts","../../../projects/ng-core-lib/src/lib/services/sysAccountsService.ts","../../../projects/ng-core-lib/src/lib/services/sysUsersService.ts","../../../projects/ng-core-lib/src/lib/services/usrActivitiesService.ts","../../../projects/ng-core-lib/src/lib/services/userBookingsService.ts","../../../projects/ng-core-lib/src/lib/services/userPlacementsService.ts","../../../projects/ng-core-lib/src/lib/services/userAccountsService.ts","../../../projects/ng-core-lib/src/lib/services/usrMembersService.ts","../../../projects/ng-core-lib/src/lib/services/userService.ts","../../../projects/ng-core-lib/src/lib/services/services.export.ts","../../../projects/ng-core-lib/src/core-lib.module.ts","../../../projects/ng-core-lib/src/public-api.ts","../../../projects/ng-core-lib/src/mottyc-ng-core-lib.ts"],"sourcesContent":["\n/* \n *  Schedule time frame\n *  Times are described in ISO 8601 format (See: https://www.w3.org/TR/NOTE-datetime).\n *  The format is: YYYY-MM-DDThh:mm:ssTZD where:\n *  <ul>\n *  <li>YYYY = four-digit year</li>\n *  <li>MM   = two-digit month (01=January, etc.)</li>\n *  <li>DD   = two-digit day of month (01 through 31)</li>\n *  <li>hh   = two digits of hour (00 through 23) (am/pm NOT allowed)</li>\n *  <li>mm   = two digits of minute (00 through 59)</li>\n *  <li>ss   = two digits of second (00 through 59)\n *  <li>TZD  = time zone designator (Z for UTC or +hh:mm or -hh:mm for Timezone offset)</li>\n *  </ul>\n*/\nexport class AbsoluteTimeFrame {\n \n    // Name of time frame \n    public name: string;\n \n    // Start time in the ISO-8601 format (YYYY-MM-DDThh:mm:ssTZD) \n    public startTime: string;\n \n    // End time in the ISO-8601 format (YYYY-MM-DDThh:mm:ssTZD) \n    public endTime: string;\n \n    // Specify if this time frame is active \n    public active: boolean;\n \n    constructor(name?: string, startTime?: string, endTime?: string, active?: boolean) { \n        this.name = name;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.active = active;\n    }\n\n}\n\n\n/*\n *  Interface of AbsoluteTimeFrame\n*/\nexport interface IAbsoluteTimeFrame {\n \n    // Name of time frame \n    name?: string;\n \n    // Start time in the ISO-8601 format (YYYY-MM-DDThh:mm:ssTZD) \n    startTime?: string;\n \n    // End time in the ISO-8601 format (YYYY-MM-DDThh:mm:ssTZD) \n    endTime?: string;\n \n    // Specify if this time frame is active \n    active?: boolean;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n *  Account role represents the role of the user in the account\n*/\nexport class AccountRole {\n \n    // Account Id \n    public accountId: string;\n \n    // User role in the account \n    public role: AccountRoleCode;\n \n    constructor(accountId?: string, role?: AccountRoleCode) { \n        this.accountId = accountId;\n        this.role = role;\n    }\n\n}\n\n\n/*\n *  Interface of AccountRole\n*/\nexport interface IAccountRole {\n \n    // Account Id \n    accountId?: string;\n \n    // User role in the account \n    role?: AccountRoleCode;\n \n}\n","import { RecurrentActivity } from '../common/RecurrentActivity';\n\n/* \n *  Account specific settings\n*/\nexport class AccountSettings {\n \n    // Default recurrent weekly activities \n    public defaultActivities: RecurrentActivity[];\n \n    // Operational (dynamic) data retention time in days (1 - 365) \n    public retentionDays: number;\n \n    constructor(defaultActivities?: RecurrentActivity[], retentionDays?: number) { \n        this.defaultActivities = defaultActivities;\n        this.retentionDays = retentionDays;\n    }\n\n}\n\n\n/*\n *  Interface of AccountSettings\n*/\nexport interface IAccountSettings {\n \n    // Default recurrent weekly activities \n    defaultActivities?: RecurrentActivity[];\n \n    // Operational (dynamic) data retention time in days (1 - 365) \n    retentionDays?: number;\n \n}\n","import { UserStatusCode } from '../enums/UserStatusCode';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\nimport { UserTypeCode } from '../enums/UserTypeCode';\n\n/* \n *  Login data (returned by the API after successful login)\n*/\nexport class LoginData {\n \n    // Access token to use (for the default account) \n    public accessToken: string;\n \n    // User Id \n    public userId: string;\n \n    // Account Id \n    public accountId: string;\n \n    // Current account id and role \n    public accountRole: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    public memberStatus: MemberStatusCode;\n \n    // User name \n    public userName: string;\n \n    // User email \n    public userEmail: string;\n \n    // User type \n    public userType: UserTypeCode;\n \n    // User status \n    public userStatus: UserStatusCode;\n \n    // User must change password on next login \n    public changePassword: boolean;\n \n    constructor(accessToken?: string, userId?: string, accountId?: string, accountRole?: AccountRoleCode, memberStatus?: MemberStatusCode, userName?: string, userEmail?: string, userType?: UserTypeCode, userStatus?: UserStatusCode, changePassword?: boolean) { \n        this.accessToken = accessToken;\n        this.userId = userId;\n        this.accountId = accountId;\n        this.accountRole = accountRole;\n        this.memberStatus = memberStatus;\n        this.userName = userName;\n        this.userEmail = userEmail;\n        this.userType = userType;\n        this.userStatus = userStatus;\n        this.changePassword = changePassword;\n    }\n\n}\n\n\n/*\n *  Interface of LoginData\n*/\nexport interface ILoginData {\n \n    // Access token to use (for the default account) \n    accessToken?: string;\n \n    // User Id \n    userId?: string;\n \n    // Account Id \n    accountId?: string;\n \n    // Current account id and role \n    accountRole?: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    memberStatus?: MemberStatusCode;\n \n    // User name \n    userName?: string;\n \n    // User email \n    userEmail?: string;\n \n    // User type \n    userType?: UserTypeCode;\n \n    // User status \n    userStatus?: UserStatusCode;\n \n    // User must change password on next login \n    changePassword?: boolean;\n \n}\n","\n/* \n *  Login parameters data model\n*/\nexport class LoginParams {\n \n    // User email \n    public email: string;\n \n    // User password \n    public password: string;\n \n    // Access token - in case of re-login with existing token \n    public accessToken: string;\n \n    constructor(email?: string, password?: string, accessToken?: string) { \n        this.email = email;\n        this.password = password;\n        this.accessToken = accessToken;\n    }\n\n}\n\n\n/*\n *  Interface of LoginParams\n*/\nexport interface ILoginParams {\n \n    // User email \n    email?: string;\n \n    // User password \n    password?: string;\n \n    // Access token - in case of re-login with existing token \n    accessToken?: string;\n \n}\n","import { UserGenderCode } from '../enums/UserGenderCode';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n *  Member registration data model\n*/\nexport class MemberRegistration {\n \n    // User name \n    public name: string;\n \n    // User email \n    public email: string;\n \n    // User mobile phone number (for notification and validation) \n    public mobile: string;\n \n    // User gender \n    public gender: UserGenderCode;\n \n    // Default account Id \n    public accountId: string;\n \n    // List of accounts and roles the user has access to \n    public accountRole: AccountRoleCode;\n \n    // Temporary password (leave empty for system generated password) \n    public tempPassword: string;\n \n    // User must change password on next login \n    public changePassword: boolean;\n \n    // Flag to send email verification to the user \n    public verifyByEmail: boolean;\n \n    constructor(name?: string, email?: string, mobile?: string, gender?: UserGenderCode, accountId?: string, accountRole?: AccountRoleCode, tempPassword?: string, changePassword?: boolean, verifyByEmail?: boolean) { \n        this.name = name;\n        this.email = email;\n        this.mobile = mobile;\n        this.gender = gender;\n        this.accountId = accountId;\n        this.accountRole = accountRole;\n        this.tempPassword = tempPassword;\n        this.changePassword = changePassword;\n        this.verifyByEmail = verifyByEmail;\n    }\n\n}\n\n\n/*\n *  Interface of MemberRegistration\n*/\nexport interface IMemberRegistration {\n \n    // User name \n    name?: string;\n \n    // User email \n    email?: string;\n \n    // User mobile phone number (for notification and validation) \n    mobile?: string;\n \n    // User gender \n    gender?: UserGenderCode;\n \n    // Default account Id \n    accountId?: string;\n \n    // List of accounts and roles the user has access to \n    accountRole?: AccountRoleCode;\n \n    // Temporary password (leave empty for system generated password) \n    tempPassword?: string;\n \n    // User must change password on next login \n    changePassword?: boolean;\n \n    // Flag to send email verification to the user \n    verifyByEmail?: boolean;\n \n}\n","import { DayOfWeekCode } from '../enums/DayOfWeekCode';\nimport { ResourceTypeMask } from '../enums/ResourceTypeMask';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n *  Recurrent activity\n*/\nexport class RecurrentActivity {\n \n    // Day of week - based on ISO8601 \n    public dayOfWeek: DayOfWeekCode;\n \n    // Start time [number of minutes start from 00:00 UTC] \n    public startTime: number;\n \n    // End time [number of minutes start from 00:00 UTC] \n    public endTime: number;\n \n    // Name of the activity \n    public name: string;\n \n    // Activity is restricted to specific resource type \n    public resourceFilter: ResourceTypeMask[];\n \n    // Activity is restricted to specific role (members, para, team) \n    public roleFilter: AccountRoleCode[];\n \n    constructor(dayOfWeek?: DayOfWeekCode, startTime?: number, endTime?: number, name?: string, resourceFilter?: ResourceTypeMask[], roleFilter?: AccountRoleCode[]) { \n        this.dayOfWeek = dayOfWeek;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.name = name;\n        this.resourceFilter = resourceFilter;\n        this.roleFilter = roleFilter;\n    }\n\n}\n\n\n/*\n *  Interface of RecurrentActivity\n*/\nexport interface IRecurrentActivity {\n \n    // Day of week - based on ISO8601 \n    dayOfWeek?: DayOfWeekCode;\n \n    // Start time [number of minutes start from 00:00 UTC] \n    startTime?: number;\n \n    // End time [number of minutes start from 00:00 UTC] \n    endTime?: number;\n \n    // Name of the activity \n    name?: string;\n \n    // Activity is restricted to specific resource type \n    resourceFilter?: ResourceTypeMask[];\n \n    // Activity is restricted to specific role (members, para, team) \n    roleFilter?: AccountRoleCode[];\n \n}\n","import { DayOfWeekCode } from '../enums/DayOfWeekCode';\n\n/* \n *  Schedule recurrent time frame\n*/\nexport class RecurrentTimeFrame {\n \n    // Day of week - based on ISO8601 \n    public dayOfWeek: DayOfWeekCode;\n \n    // Start time [number of minutes start from 00:00] \n    public startTime: number;\n \n    // End time [number of minutes start from 00:00] \n    public endTime: number;\n \n    // Name of the time frame \n    public name: string;\n \n    constructor(dayOfWeek?: DayOfWeekCode, startTime?: number, endTime?: number, name?: string) { \n        this.dayOfWeek = dayOfWeek;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.name = name;\n    }\n\n}\n\n\n/*\n *  Interface of RecurrentTimeFrame\n*/\nexport interface IRecurrentTimeFrame {\n \n    // Day of week - based on ISO8601 \n    dayOfWeek?: DayOfWeekCode;\n \n    // Start time [number of minutes start from 00:00] \n    startTime?: number;\n \n    // End time [number of minutes start from 00:00] \n    endTime?: number;\n \n    // Name of the time frame \n    name?: string;\n \n}\n","\n/* \n *  Key Value string tuple\n*/\nexport class StringKeyValue {\n \n    // Key of tuple \n    public key: string;\n \n    // Value of tuple \n    public value: string;\n \n    constructor(key?: string, value?: string) { \n        this.key = key;\n        this.value = value;\n    }\n\n}\n\n\n/*\n *  Interface of StringKeyValue\n*/\nexport interface IStringKeyValue {\n \n    // Key of tuple \n    key?: string;\n \n    // Value of tuple \n    value?: string;\n \n}\n","\n/* \n *  Time frame (for search and reports)\n*/\nexport class TimeFrame {\n \n    // Start time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // End time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    constructor(from?: number, to?: number) { \n        this.from = from;\n        this.to = to;\n    }\n\n}\n\n\n/*\n *  Interface of TimeFrame\n*/\nexport interface ITimeFrame {\n \n    // Start time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // End time [Epoch milliseconds Timestamp] \n    to?: number;\n \n}\n","import { Account } from '../entities/Account';\nimport { LoginData } from '../common/LoginData';\nimport { FeatureCode } from '../enums/FeatureCode';\n\n/* \n *  User Account info (returned by switch-account method)\n*/\nexport class UserAccountInfo {\n \n    // Account data \n    public account: Account;\n \n    // Login data \n    public loginData: LoginData;\n \n    // List of features enabled for this account \n    public features: FeatureCode[];\n \n    constructor(account?: Account, loginData?: LoginData, features?: FeatureCode[]) { \n        this.account = account;\n        this.loginData = loginData;\n        this.features = features;\n    }\n\n}\n\n\n/*\n *  Interface of UserAccountInfo\n*/\nexport interface IUserAccountInfo {\n \n    // Account data \n    account?: Account;\n \n    // Login data \n    loginData?: LoginData;\n \n    // List of features enabled for this account \n    features?: FeatureCode[];\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n *  User invitation data model - used by account admin to invite user to the account\n*/\nexport class UserInvitation {\n \n    // User email \n    public email: string;\n \n    // User role in the account \n    public role: AccountRoleCode;\n \n    constructor(email?: string, role?: AccountRoleCode) { \n        this.email = email;\n        this.role = role;\n    }\n\n}\n\n\n/*\n *  Interface of UserInvitation\n*/\nexport interface IUserInvitation {\n \n    // User email \n    email?: string;\n \n    // User role in the account \n    role?: AccountRoleCode;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { UserTypeCode } from '../enums/UserTypeCode';\n\n/* \n *  User registration data model\n*/\nexport class UserRegistration {\n \n    // User name \n    public name: string;\n \n    // User email \n    public email: string;\n \n    // User mobile phone number (for notification and validation) \n    public mobile: string;\n \n    // Default account Id \n    public accountId: string;\n \n    // List of accounts and roles the user has access to \n    public accountRole: AccountRoleCode;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    public type: UserTypeCode;\n \n    // Temporary password (leave empty for system generated password) \n    public tempPassword: string;\n \n    // User must change password on next login \n    public changePassword: boolean;\n \n    // Flag to send email verification to the user \n    public verifyByEmail: boolean;\n \n    // User description \n    public description: string;\n \n    constructor(name?: string, email?: string, mobile?: string, accountId?: string, accountRole?: AccountRoleCode, type?: UserTypeCode, tempPassword?: string, changePassword?: boolean, verifyByEmail?: boolean, description?: string) { \n        this.name = name;\n        this.email = email;\n        this.mobile = mobile;\n        this.accountId = accountId;\n        this.accountRole = accountRole;\n        this.type = type;\n        this.tempPassword = tempPassword;\n        this.changePassword = changePassword;\n        this.verifyByEmail = verifyByEmail;\n        this.description = description;\n    }\n\n}\n\n\n/*\n *  Interface of UserRegistration\n*/\nexport interface IUserRegistration {\n \n    // User name \n    name?: string;\n \n    // User email \n    email?: string;\n \n    // User mobile phone number (for notification and validation) \n    mobile?: string;\n \n    // Default account Id \n    accountId?: string;\n \n    // List of accounts and roles the user has access to \n    accountRole?: AccountRoleCode;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    type?: UserTypeCode;\n \n    // Temporary password (leave empty for system generated password) \n    tempPassword?: string;\n \n    // User must change password on next login \n    changePassword?: boolean;\n \n    // Flag to send email verification to the user \n    verifyByEmail?: boolean;\n \n    // User description \n    description?: string;\n \n}\n","\n/* \n *  Weight Range\n*/\nexport class WeightRange {\n \n    // Minimum weight [Kg] \n    public min: number;\n \n    // Maximum weight [Kg] \n    public max: number;\n \n    constructor(min?: number, max?: number) { \n        this.min = min;\n        this.max = max;\n    }\n\n}\n\n\n/*\n *  Interface of WeightRange\n*/\nexport interface IWeightRange {\n \n    // Minimum weight [Kg] \n    min?: number;\n \n    // Maximum weight [Kg] \n    max?: number;\n \n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\n/* \n *  Base entity includes common fields for all entities (persistence objects) in the system: id, create and update time\n*/\nexport class BaseEntity {\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n    constructor(id?: string, createdOn?: number, updatedOn?: number) { \n        this.id = id;\n        this.createdOn = createdOn;\n        this.updatedOn = updatedOn;\n    }\n\n}\n\n\n/*\n *  Interface of BaseEntity\n*/\nexport interface IBaseEntity {\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { AccountTypeCode } from '../enums/AccountTypeCode';\nimport { AccountStatusCode } from '../enums/AccountStatusCode';\nimport { AccountSettings } from '../common/AccountSettings';\nimport { ResourceClassCode } from '../enums/ResourceClassCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Account entity in the system represents a club\n*/\nexport class Account extends BaseEntity {\n \n    // Account name \n    public name: string;\n \n    // Account Type: UNDEFINED | DEMO | TRIAL | PARTNER | CUSTOMER \n    public type: AccountTypeCode;\n \n    // Account status: UNDEFINED | ACTIVE | SUSPENDED \n    public status: AccountStatusCode;\n \n    // When the account was suspended [Epoch milliseconds Timestamp] second inline field documentation \n    public suspendedOn: number;\n \n    // List of associated account groups (for feature toggle) \n    public groups: string[];\n \n    // Account timezone (IANA format, default is UTC) \n    public timezone: string;\n \n    // When the account will be expired [Epoch milliseconds Timestamp] (0 means no expiration time) \n    public expiredOn: number;\n \n    // Account description \n    public description: string;\n \n    // Account specific settings \n    public settings: AccountSettings;\n \n    // Resource class managed in the account (boat, kayak...) \n    public resourceClass: ResourceClassCode;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Account\n*/\nexport interface IAccount extends IBaseEntity {\n \n    // Account name \n    name?: string;\n \n    // Account Type: UNDEFINED | DEMO | TRIAL | PARTNER | CUSTOMER \n    type?: AccountTypeCode;\n \n    // Account status: UNDEFINED | ACTIVE | SUSPENDED \n    status?: AccountStatusCode;\n \n    // When the account was suspended [Epoch milliseconds Timestamp] second inline field documentation \n    suspendedOn?: number;\n \n    // List of associated account groups (for feature toggle) \n    groups?: string[];\n \n    // Account timezone (IANA format, default is UTC) \n    timezone?: string;\n \n    // When the account will be expired [Epoch milliseconds Timestamp] (0 means no expiration time) \n    expiredOn?: number;\n \n    // Account description \n    description?: string;\n \n    // Account specific settings \n    settings?: AccountSettings;\n \n    // Resource class managed in the account (boat, kayak...) \n    resourceClass?: ResourceClassCode;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { ActivityStatusCode } from '../enums/ActivityStatusCode';\nimport { ResourceTypeMask } from '../enums/ResourceTypeMask';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Daily account activities entity\n*/\nexport class Activity extends BaseEntity {\n \n    // Activity name \n    public name: string;\n \n    // Start time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // End time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // Status of booking requests \n    public status: ActivityStatusCode;\n \n    // Activity is restricted to specific resource types \n    public resourceFilter: ResourceTypeMask[];\n \n    // Activity is restricted to specific roles (members, para, team) \n    public roleFilter: AccountRoleCode[];\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Activity\n*/\nexport interface IActivity extends IBaseEntity {\n \n    // Activity name \n    name?: string;\n \n    // Start time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // End time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // Status of booking requests \n    status?: ActivityStatusCode;\n \n    // Activity is restricted to specific resource types \n    resourceFilter?: ResourceTypeMask[];\n \n    // Activity is restricted to specific roles (members, para, team) \n    roleFilter?: AccountRoleCode[];\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { Activity } from '../entities/Activity';\nimport { Booking } from '../entities/Booking';\n\n/* \n *  Activity Booking Group\n *  Group list of bookings by activity\n*/\nexport class ActivityBookingGroup {\n \n    // Activity \n    public activity: Activity;\n \n    // List of bookings in the activity \n    public bookings: Booking[];\n \n    constructor(activity?: Activity, bookings?: Booking[]) { \n        this.activity = activity;\n        this.bookings = bookings;\n    }\n\n}\n\n\n/*\n *  Interface of ActivityBookingGroup\n*/\nexport interface IActivityBookingGroup {\n \n    // Activity \n    activity?: Activity;\n \n    // List of bookings in the activity \n    bookings?: Booking[];\n \n}\n","import { StringKeyValue } from '../common/StringKeyValue';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  API Key is used per application (e.g. Portal, Mobile App) or service to identify the consumer.\n *  The access to sets of REST endpoints is restricted according the API key.\n *  API key also dictates the default session TTL per application (e.g. 20 minutes for Portal or Console, 30 days for Mobile app)\n *  The application/system name is the Entity Id, the API key itself is not stored in the DB but generated on the fly.\n*/\nexport class ApiKey extends BaseEntity {\n \n    // The API Key (this value is auto generated and not stored in the DB) \n    public key: string;\n \n    // Default session token TTL (in minutes), 0 means no TTL \n    public ttl: number;\n \n    // Access Control List key value pair - the key is the REST resource name, the value is subset of CRUD (Create | Read |Update |Delete) \n    public acl: StringKeyValue[];\n \n    // Key version (for key rotation) \n    public version: number;\n \n    // Flag to indicate if this a system key or user defined key \n    public isSystemKey: boolean;\n \n    // Flag to indicate if the key is enabled \n    public isEnabled: boolean;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of ApiKey\n*/\nexport interface IApiKey extends IBaseEntity {\n \n    // The API Key (this value is auto generated and not stored in the DB) \n    key?: string;\n \n    // Default session token TTL (in minutes), 0 means no TTL \n    ttl?: number;\n \n    // Access Control List key value pair - the key is the REST resource name, the value is subset of CRUD (Create | Read |Update |Delete) \n    acl?: StringKeyValue[];\n \n    // Key version (for key rotation) \n    version?: number;\n \n    // Flag to indicate if this a system key or user defined key \n    isSystemKey?: boolean;\n \n    // Flag to indicate if the key is enabled \n    isEnabled?: boolean;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { EntityTypeCode } from '../enums/EntityTypeCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Audit Log entry - represents a single action done by user\n*/\nexport class AuditLog extends BaseEntity {\n \n    // Account Id \n    public accountId: string;\n \n    // User Id \n    public userId: string;\n \n    // User role in the account when the action was performed \n    public userRole: AccountRoleCode;\n \n    // User name when the action was performed \n    public userName: string;\n \n    // Action that was performed \n    public action: string;\n \n    // Changed item type \n    public itemType: EntityTypeCode;\n \n    // Changed item Id \n    public itemId: string;\n \n    // Item Name \n    public itemName: string;\n \n    // Item value before change [Json] \n    public beforeChange: string;\n \n    // Item delta after change [Json] \n    public afterChange: string;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of AuditLog\n*/\nexport interface IAuditLog extends IBaseEntity {\n \n    // Account Id \n    accountId?: string;\n \n    // User Id \n    userId?: string;\n \n    // User role in the account when the action was performed \n    userRole?: AccountRoleCode;\n \n    // User name when the action was performed \n    userName?: string;\n \n    // Action that was performed \n    action?: string;\n \n    // Changed item type \n    itemType?: EntityTypeCode;\n \n    // Changed item Id \n    itemId?: string;\n \n    // Item Name \n    itemName?: string;\n \n    // Item value before change [Json] \n    beforeChange?: string;\n \n    // Item delta after change [Json] \n    afterChange?: string;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { ResourceTypeMask } from '../enums/ResourceTypeMask';\nimport { BookingStatusCode } from '../enums/BookingStatusCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Booking\n *  A booking is a pending request to book a resource for specific time for user(s), once it is approved, it becomes a placement\n*/\nexport class Booking extends BaseEntity {\n \n    // Activity id associated with this booking request \n    public activityId: string;\n \n    // Activity name associated with this booking request \n    public activityName: string;\n \n    // When to ask for placement [Epoch milliseconds Timestamp] \n    public placementOn: number;\n \n    // Activity end time [Epoch milliseconds Timestamp] \n    public placementTo: number;\n \n    // Actual Duration (in minutes) \n    public duration: number;\n \n    // Actual Distance (in meters) \n    public distance: number;\n \n    // Booking for specific resource \n    public resourceId: string;\n \n    // User Id who requested the booking \n    public requestedBy: string;\n \n    // User Id for the placement \n    public requestedFor: string[];\n \n    // Resource type \n    public resourceType: ResourceTypeMask;\n \n    // When the placement was approved [Epoch milliseconds Timestamp] \n    public approvedOn: number;\n \n    // Booking status \n    public status: BookingStatusCode;\n \n    // Booking for a private resource \n    public private: boolean;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Booking\n*/\nexport interface IBooking extends IBaseEntity {\n \n    // Activity id associated with this booking request \n    activityId?: string;\n \n    // Activity name associated with this booking request \n    activityName?: string;\n \n    // When to ask for placement [Epoch milliseconds Timestamp] \n    placementOn?: number;\n \n    // Activity end time [Epoch milliseconds Timestamp] \n    placementTo?: number;\n \n    // Actual Duration (in minutes) \n    duration?: number;\n \n    // Actual Distance (in meters) \n    distance?: number;\n \n    // Booking for specific resource \n    resourceId?: string;\n \n    // User Id who requested the booking \n    requestedBy?: string;\n \n    // User Id for the placement \n    requestedFor?: string[];\n \n    // Resource type \n    resourceType?: ResourceTypeMask;\n \n    // When the placement was approved [Epoch milliseconds Timestamp] \n    approvedOn?: number;\n \n    // Booking status \n    status?: BookingStatusCode;\n \n    // Booking for a private resource \n    private?: boolean;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { Booking } from '../entities/Booking';\n\n/* \n *  Booking Group\n *  Group list of bookings by time\n*/\nexport class BookingGroup {\n \n    // Time for grouping [Epoch milliseconds Timestamp] \n    public timeGroup: number;\n \n    // List of bookings in the group \n    public bookings: Booking[];\n \n    constructor(timeGroup?: number, bookings?: Booking[]) { \n        this.timeGroup = timeGroup;\n        this.bookings = bookings;\n    }\n\n}\n\n\n/*\n *  Interface of BookingGroup\n*/\nexport interface IBookingGroup {\n \n    // Time for grouping [Epoch milliseconds Timestamp] \n    timeGroup?: number;\n \n    // List of bookings in the group \n    bookings?: Booking[];\n \n}\n","import { ResourceTypeMask } from '../enums/ResourceTypeMask';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Booking request\n *  A booking is a pending request to book a resource for specific time for user(s), once it is approved, it becomes a placement\n*/\nexport class BookingRequest extends BaseEntity {\n \n    // When to ask for placement [Epoch milliseconds Timestamp] \n    public placementOn: number;\n \n    // Duration (in minutes) \n    public duration: number;\n \n    // User Id who requested the booking \n    public requestedBy: string;\n \n    // List of User Ids for the placement \n    public requestedFor: string[];\n \n    // Booking for specific resource \n    public resourceId: string;\n \n    // Resource type \n    public resourceType: ResourceTypeMask;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of BookingRequest\n*/\nexport interface IBookingRequest extends IBaseEntity {\n \n    // When to ask for placement [Epoch milliseconds Timestamp] \n    placementOn?: number;\n \n    // Duration (in minutes) \n    duration?: number;\n \n    // User Id who requested the booking \n    requestedBy?: string;\n \n    // List of User Ids for the placement \n    requestedFor?: string[];\n \n    // Booking for specific resource \n    resourceId?: string;\n \n    // Resource type \n    resourceType?: ResourceTypeMask;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { FeatureCode } from '../enums/FeatureCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  System functionality (feature) description\n*/\nexport class Feature extends BaseEntity {\n \n    // Feature code \n    public code: FeatureCode;\n \n    // Feature name \n    public name: string;\n \n    // Feature description \n    public description: string;\n \n    // Feature category \n    public category: string;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Feature\n*/\nexport interface IFeature extends IBaseEntity {\n \n    // Feature code \n    code?: FeatureCode;\n \n    // Feature name \n    name?: string;\n \n    // Feature description \n    description?: string;\n \n    // Feature category \n    category?: string;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { FeatureCode } from '../enums/FeatureCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Group of features\n*/\nexport class FeaturesGroup extends BaseEntity {\n \n    // Features group name \n    public name: string;\n \n    // List of associated features \n    public features: FeatureCode[];\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of FeaturesGroup\n*/\nexport interface IFeaturesGroup extends IBaseEntity {\n \n    // Features group name \n    name?: string;\n \n    // List of associated features \n    features?: FeatureCode[];\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Incident\n*/\nexport class Incident extends BaseEntity {\n \n    // Resource Id (in the club) \n    public resourceId: string;\n \n    // List of involved users \n    public involved: string[];\n \n    // When the incident occurred [Epoch milliseconds Timestamp] \n    public occurredOn: number;\n \n    // Incident description \n    public description: string;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Incident\n*/\nexport interface IIncident extends IBaseEntity {\n \n    // Resource Id (in the club) \n    resourceId?: string;\n \n    // List of involved users \n    involved?: string[];\n \n    // When the incident occurred [Epoch milliseconds Timestamp] \n    occurredOn?: number;\n \n    // Incident description \n    description?: string;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  User membership in an account\n*/\nexport class Member extends BaseEntity {\n \n    // User Id \n    public userId: string;\n \n    // Account Id \n    public accountId: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    public accountRole: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    public status: MemberStatusCode;\n \n    // Member in the club since [Epoch milliseconds Timestamp] \n    public memberSince: number;\n \n    // Membership expiration [Epoch milliseconds Timestamp] \n    public expiration: number;\n \n    // Member level [1,2,3] \n    public level: number;\n \n    // Member can be cox ? \n    public isCox: boolean;\n \n    // Member can be mentor ? \n    public isMentor: boolean;\n \n    // Training time [minutes] \n    public trainingTime: number;\n \n    // Restrictions \n    public restrictions: string;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Member\n*/\nexport interface IMember extends IBaseEntity {\n \n    // User Id \n    userId?: string;\n \n    // Account Id \n    accountId?: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    accountRole?: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    status?: MemberStatusCode;\n \n    // Member in the club since [Epoch milliseconds Timestamp] \n    memberSince?: number;\n \n    // Membership expiration [Epoch milliseconds Timestamp] \n    expiration?: number;\n \n    // Member level [1,2,3] \n    level?: number;\n \n    // Member can be cox ? \n    isCox?: boolean;\n \n    // Member can be mentor ? \n    isMentor?: boolean;\n \n    // Training time [minutes] \n    trainingTime?: number;\n \n    // Restrictions \n    restrictions?: string;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\nimport { User } from '../entities/User';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Member in an account with extended user info (for display only)\n*/\nexport class MemberUser extends BaseEntity {\n \n    // User Id \n    public userId: string;\n \n    // Account Id \n    public accountId: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    public accountRole: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    public status: MemberStatusCode;\n \n    // Member in the club since [Epoch milliseconds Timestamp] \n    public memberSince: number;\n \n    // Membership expiration [Epoch milliseconds Timestamp] \n    public expiration: number;\n \n    // Member level [1,2,3] \n    public level: number;\n \n    // Member can be cox ? \n    public isCox: boolean;\n \n    // Member can be mentor ? \n    public isMentor: boolean;\n \n    // Training time [minutes] \n    public trainingTime: number;\n \n    // Restrictions \n    public restrictions: string;\n \n    // User Info \n    public user: User;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of MemberUser\n*/\nexport interface IMemberUser extends IBaseEntity {\n \n    // User Id \n    userId?: string;\n \n    // Account Id \n    accountId?: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    accountRole?: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    status?: MemberStatusCode;\n \n    // Member in the club since [Epoch milliseconds Timestamp] \n    memberSince?: number;\n \n    // Membership expiration [Epoch milliseconds Timestamp] \n    expiration?: number;\n \n    // Member level [1,2,3] \n    level?: number;\n \n    // Member can be cox ? \n    isCox?: boolean;\n \n    // Member can be mentor ? \n    isMentor?: boolean;\n \n    // Training time [minutes] \n    trainingTime?: number;\n \n    // Restrictions \n    restrictions?: string;\n \n    // User Info \n    user?: User;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Member in an account with extended account info (for display only)\n*/\nexport class Membership extends BaseEntity {\n \n    // User Id \n    public userId: string;\n \n    // Account Id \n    public accountId: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    public accountRole: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    public status: MemberStatusCode;\n \n    // Member in the club since [Epoch milliseconds Timestamp] \n    public memberSince: number;\n \n    // Membership expiration [Epoch milliseconds Timestamp] \n    public expiration: number;\n \n    // Member level [1,2,3] \n    public level: number;\n \n    // Member can be cox ? \n    public isCox: boolean;\n \n    // Member can be mentor ? \n    public isMentor: boolean;\n \n    // Training time [minutes] \n    public trainingTime: number;\n \n    // Restrictions \n    public restrictions: string;\n \n    // Account Name \n    public accountName: string;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Membership\n*/\nexport interface IMembership extends IBaseEntity {\n \n    // User Id \n    userId?: string;\n \n    // Account Id \n    accountId?: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    accountRole?: AccountRoleCode;\n \n    // Member status: UNDEFINED | PENDING | ACTIVE | FROZEN \n    status?: MemberStatusCode;\n \n    // Member in the club since [Epoch milliseconds Timestamp] \n    memberSince?: number;\n \n    // Membership expiration [Epoch milliseconds Timestamp] \n    expiration?: number;\n \n    // Member level [1,2,3] \n    level?: number;\n \n    // Member can be cox ? \n    isCox?: boolean;\n \n    // Member can be mentor ? \n    isMentor?: boolean;\n \n    // Training time [minutes] \n    trainingTime?: number;\n \n    // Restrictions \n    restrictions?: string;\n \n    // Account Name \n    accountName?: string;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { Resource } from '../entities/Resource';\nimport { Booking } from '../entities/Booking';\nimport { PlacementStatusCode } from '../enums/PlacementStatusCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Placement is a structure to ap booking requests to a resource\n*/\nexport class Placement extends BaseEntity {\n \n    // Placement resource \n    public resource: Resource;\n \n    // List of bookings \n    public bookings: Booking[];\n \n    // Placement status \n    public status: PlacementStatusCode;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Placement\n*/\nexport interface IPlacement extends IBaseEntity {\n \n    // Placement resource \n    resource?: Resource;\n \n    // List of bookings \n    bookings?: Booking[];\n \n    // Placement status \n    status?: PlacementStatusCode;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { Placement } from '../entities/Placement';\nimport { Booking } from '../entities/Booking';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Planing is a set of booking request and placements\n*/\nexport class Planing extends BaseEntity {\n \n    // Activity Id \n    public activityId: string;\n \n    // Start time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // End time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // List of placements \n    public placements: Placement[];\n \n    // List of bookings \n    public bookings: Booking[];\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Planing\n*/\nexport interface IPlaning extends IBaseEntity {\n \n    // Activity Id \n    activityId?: string;\n \n    // Start time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // End time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // List of placements \n    placements?: Placement[];\n \n    // List of bookings \n    bookings?: Booking[];\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { WeightRange } from '../common/WeightRange';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { ResourceClassCode } from '../enums/ResourceClassCode';\nimport { ResourceTypeMask } from '../enums/ResourceTypeMask';\nimport { ResourceStatusCode } from '../enums/ResourceStatusCode';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Resource type\n*/\nexport class Resource extends BaseEntity {\n \n    // Resource Identity in the club \n    public name: string;\n \n    // Resource class \n    public resourceClass: ResourceClassCode;\n \n    // Resource type \n    public resourceType: ResourceTypeMask;\n \n    // Resource status (Available | non-available ...) \n    public status: ResourceStatusCode;\n \n    // Resource used by \n    public forUseBy: AccountRoleCode;\n \n    // Manufacturer brand \n    public brand: string;\n \n    // Minimum Maximum weight [Kg] \n    public weightRange: WeightRange;\n \n    // Description \n    public description: string;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Resource\n*/\nexport interface IResource extends IBaseEntity {\n \n    // Resource Identity in the club \n    name?: string;\n \n    // Resource class \n    resourceClass?: ResourceClassCode;\n \n    // Resource type \n    resourceType?: ResourceTypeMask;\n \n    // Resource status (Available | non-available ...) \n    status?: ResourceStatusCode;\n \n    // Resource used by \n    forUseBy?: AccountRoleCode;\n \n    // Manufacturer brand \n    brand?: string;\n \n    // Minimum Maximum weight [Kg] \n    weightRange?: WeightRange;\n \n    // Description \n    description?: string;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { UserTypeCode } from '../enums/UserTypeCode';\nimport { UserStatusCode } from '../enums/UserStatusCode';\nimport { UserGenderCode } from '../enums/UserGenderCode';\nimport { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  User type\n*/\nexport class User extends BaseEntity {\n \n    // User name \n    public name: string;\n \n    // User email \n    public email: string;\n \n    // User mobile phone number (for notification and validation) \n    public mobile: string;\n \n    // Password salt \n    public salt: string;\n \n    // Password hash \n    public hash: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    public type: UserTypeCode;\n \n    // User status: UNDEFINED | PENDING | ACTIVE | BLOCKED | SUSPENDED \n    public status: UserStatusCode;\n \n    // When user was last suspended [Epoch milliseconds Timestamp] \n    public suspendedOn: number;\n \n    // Number of Sign-in Attempts \n    public signInAttempts: number;\n \n    // User must change password on next login \n    public changePassword: boolean;\n \n    // When user created his password [Epoch milliseconds Timestamp] \n    public passwordChangedOn: number;\n \n    // Default account Id \n    public defaultAccount: string;\n \n    // User description \n    public description: string;\n \n    // User birthday (to determine age) [Epoch milliseconds Timestamp] \n    public birthday: number;\n \n    // User gender \n    public gender: UserGenderCode;\n \n    // User weight [Kg] \n    public weight: number;\n \n    // User Height [Cm] \n    public height: number;\n \n    // User Shoe Size [European size] \n    public shoeSize: number;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of User\n*/\nexport interface IUser extends IBaseEntity {\n \n    // User name \n    name?: string;\n \n    // User email \n    email?: string;\n \n    // User mobile phone number (for notification and validation) \n    mobile?: string;\n \n    // Password salt \n    salt?: string;\n \n    // Password hash \n    hash?: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    type?: UserTypeCode;\n \n    // User status: UNDEFINED | PENDING | ACTIVE | BLOCKED | SUSPENDED \n    status?: UserStatusCode;\n \n    // When user was last suspended [Epoch milliseconds Timestamp] \n    suspendedOn?: number;\n \n    // Number of Sign-in Attempts \n    signInAttempts?: number;\n \n    // User must change password on next login \n    changePassword?: boolean;\n \n    // When user created his password [Epoch milliseconds Timestamp] \n    passwordChangedOn?: number;\n \n    // Default account Id \n    defaultAccount?: string;\n \n    // User description \n    description?: string;\n \n    // User birthday (to determine age) [Epoch milliseconds Timestamp] \n    birthday?: number;\n \n    // User gender \n    gender?: UserGenderCode;\n \n    // User weight [Kg] \n    weight?: number;\n \n    // User Height [Cm] \n    height?: number;\n \n    // User Shoe Size [European size] \n    shoeSize?: number;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","import { BaseEntity } from '../entities/BaseEntity';\nimport { IBaseEntity } from '../entities/BaseEntity';\n\n/* \n *  Verification type used to verify user with a temporary code\n*/\nexport class Verification extends BaseEntity {\n \n    // Verification code \n    public code: string;\n \n    // Verification for user id \n    public userId: string;\n \n    // User email \n    public email: string;\n \n    // User mobile phone number (for notification and validation) \n    public mobile: string;\n \n    // When the verification code was sent [Epoch milliseconds Timestamp] \n    public sent: number;\n \n    // Entity Id \n    public id: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n\n}\n\n\n/*\n *  Interface of Verification\n*/\nexport interface IVerification extends IBaseEntity {\n \n    // Verification code \n    code?: string;\n \n    // Verification for user id \n    userId?: string;\n \n    // User email \n    email?: string;\n \n    // User mobile phone number (for notification and validation) \n    mobile?: string;\n \n    // When the verification code was sent [Epoch milliseconds Timestamp] \n    sent?: number;\n \n    // Entity Id \n    id?: string;\n \n    // When the entity was created [Epoch milliseconds Timestamp] \n    createdOn?: number;\n \n    // When the entity was updated [Epoch milliseconds Timestamp] \n    updatedOn?: number;\n \n}\n","/* \n   Account role code (represent role of user in the account) \n*/\nexport enum AccountRoleCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Account administrator can perform all operations [1] \n    ADMIN = 1,\n \n    // Part of a club staff [2] \n    STAFF = 2,\n \n    // Club Member [4] \n    MEMBER = 4,\n \n    // Olympic team [8] \n    TEAM = 8,\n \n    // Paralympic team [16] \n    PARA = 16,\n \n    // Club guest [32] \n    GUEST = 32,\n \n}","/* \n   Account status code \n*/\nexport enum AccountStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Active account [1] \n    ACTIVE = 1,\n \n    // Suspended (non-active) account [2] \n    SUSPENDED = 2,\n \n    // Deleted account [3] \n    DELETED = 3,\n \n}","/* \n   Account type code \n*/\nexport enum AccountTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Demo account for Tests and Demos [1] \n    DEMO = 1,\n \n    // Trial account for pilots [2] \n    TRIAL = 2,\n \n    // Active account for customer [3] \n    CUSTOMER = 3,\n \n}","/* \n   Daily activity status code \n*/\nexport enum ActivityStatusCode {\n \n    // Undefined - No booking in this activity [0] \n    UNDEFINED = 0,\n \n    // Some booking requests approved, not all [1] \n    PARTIAL = 1,\n \n    // All booking requests approved [2] \n    FULL = 2,\n \n}","/* \n   Booking status code \n*/\nexport enum BookingStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Pending booking request [1] \n    PENDING = 1,\n \n    // Approved booking [2] \n    APPROVED = 2,\n \n    // Cancelled booking [3] \n    CANCELLED = 3,\n \n}","/* \n   Day of week code \n*/\nexport enum DayOfWeekCode {\n \n    // Sunday [0] \n    SUN = 0,\n \n    // Monday [1] \n    MON = 1,\n \n    // Tuesday [2] \n    TUE = 2,\n \n    // Wednesday [3] \n    WED = 3,\n \n    // Thursday [4] \n    THU = 4,\n \n    // Friday [5] \n    FRI = 5,\n \n    // Saturday [6] \n    SAT = 6,\n \n}","/* \n   Entity type code (represent entity type in the system) \n*/\nexport enum EntityTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Account [1] \n    ACCOUNT = 1,\n \n    // User [2] \n    USER = 2,\n \n    // API Key [3] \n    API_KEY = 3,\n \n    // Audit Log [4] \n    AUDIT_LOG = 4,\n \n    // Booking [5] \n    BOOKING = 5,\n \n    // Feature [6] \n    FEATURE = 6,\n \n    // Features Group [7] \n    FEATURES_GROUP = 7,\n \n    // Incident [8] \n    INCIDENT = 8,\n \n    // Booking Placement [9] \n    PLACEMENT = 9,\n \n    // Club Resource [10] \n    RESOURCE = 10,\n \n}","/* \n   Feature codes \n*/\nexport enum FeatureCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Admin module [1] \n    MODULE_ADMIN = 1,\n \n    // System admin module [2] \n    MODULE_SYSADMIN = 2,\n \n}","/* \n   Kayak type code \n*/\nexport enum KayakTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Ocean Kayak [2 + 1024] \n    OCEAN = 1026,\n \n    // Double Ocean Kayak [2 + 2048] \n    OCEAN_X2 = 2050,\n \n}","/* \n   Member status code \n*/\nexport enum MemberStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Member is registered and pending approval [1] \n    PENDING = 1,\n \n    // Active member in the account [2] \n    ACTIVE = 2,\n \n    // Frozen member (not active) [3] \n    FROZEN = 3,\n \n}","/* \n   Placement status code \n*/\nexport enum PlacementStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Partial [1] \n    PARTIAL = 1,\n \n    // Complete [2] \n    COMPLETE = 2,\n \n    // Approved [3] \n    APPROVED = 3,\n \n}","/* \n   Resource class code (represent resource in the system) \n*/\nexport enum ResourceClassCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Rowing Boat [1024] \n    RBOAT = 1024,\n \n    // Kayak [2048] \n    KAYAK = 2048,\n \n}","/* \n   Resource status code \n*/\nexport enum ResourceStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Available [1] \n    AVAILABLE = 1,\n \n    // Non-available [2] \n    NONAVAILABLE = 2,\n \n}","/* \n   General Resource Type (Attributes bit mask) \n*/\nexport enum ResourceTypeMask {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Rowing Boat [1] \n    RBOAT = 1,\n \n    // Kayak [2] \n    KAYAK = 2,\n \n    // Sculling (2 oars) [4] \n    SCULL = 4,\n \n    // Need Cox [8] \n    COX = 8,\n \n    // Wide [16] \n    WIDE = 16,\n \n    // For competition [32] \n    COMP = 32,\n \n    // For para-olympic [64] \n    PARA = 64,\n \n    // Coastal (use in sea) [128] \n    COASTAL = 128,\n \n    // Single [1024] \n    P1 = 1024,\n \n    // Double [2048] \n    P2 = 2048,\n \n    // Quad [4096] \n    P4 = 4096,\n \n    // Eight [8192] \n    P8 = 8192,\n \n}","/* \n   Rowing boat type code \n*/\nexport enum RowingBoatTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Sculling 1X [1 + 4 + 1024] \n    SCULL_1X = 1029,\n \n    // Sculling 1X Wide [1 + 4 + 1024 + 16] \n    SCULL_1X_WIDE = 1045,\n \n    // Sculling 1X Competition [1 + 4 + 1024 + 32] \n    SCULL_1X_COMP = 1061,\n \n    // Sculling 1X Para Olympic [1 + 4 + 1024 + 64] \n    SCULL_1X_PARA = 1093,\n \n    // Sculling 2X [1 + 4 + 2048] \n    SCULL_2X = 2053,\n \n    // Sculling 2X Wide [1 + 4 + 2048 + 16] \n    SCULL_2X_WIDE = 2069,\n \n    // Sculling 2X Competition [1 + 4 + 2048 + 16 + 32] \n    SCULL_2X_COMP = 2101,\n \n    // Sculling 2X Para Olympic [1 + 4 + 2048 + 16 + 64] \n    SCULL_2X_PARA = 2133,\n \n    // Sweeping 2- Coxless Pair [1 + 2048] \n    SWEEP_2_COXLESS = 2049,\n \n    // Coastal 2X [1 + 4 + 8 + 128 + 2048] \n    COASTAL_2X = 2189,\n \n    // Sculling 4X Quad [1 + 4 + 4096] \n    SCULL_4X = 4101,\n \n    // Sculling 4X Quad with cox [1 + 4 + 8 + 4096] \n    SCULL_4X_COX = 4109,\n \n    // Sweeping 4- Coxless Quad [1 + 4096] \n    SWEEP_4_COXLESS = 4097,\n \n    // Sculling 4X Competition [1 + 4 + 32 + 4096] \n    SCULL_4X_COMP = 4133,\n \n    // Sculling 4X Para Olympic [1 + 4 + 64 + 4096] \n    SCULL_4X_PARA = 4165,\n \n    // Coastal 4X with cox [1 + 4 + 8 + 128 + 4096] \n    COASTAL_4X_COX = 4237,\n \n    // Sweeping 8 - with cox [1 + 8192] \n    SWEEP_8_COX = 8193,\n \n    // Sculling 8 - with cox [1 + 8 + 8192] \n    SCULL_8X_COX = 8201,\n \n}","/* \n   Time unit interval \n*/\nexport enum TimeUnitCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Second interval [1] \n    SECOND = 1,\n \n    // Minute interval [2] \n    MINUTE = 2,\n \n    // Hour interval [3] \n    HOUR = 3,\n \n    // Day interval [4] \n    DAY = 4,\n \n    // Week interval [5] \n    WEEK = 5,\n \n    // Month interval [6] \n    MONTH = 6,\n \n}","/* \n   User gender code \n*/\nexport enum UserGenderCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Male [1] \n    MALE = 1,\n \n    // Female [2] \n    FEMALE = 2,\n \n}","/* \n   User status code \n*/\nexport enum UserStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // User is registered and pending verification [1] \n    PENDING = 1,\n \n    // Active user in the system [2] \n    ACTIVE = 2,\n \n    // Blocked user (only account system can unblock the user) [3] \n    BLOCKED = 3,\n \n    // Suspended user (about to be deleted) [4] \n    SUSPENDED = 4,\n \n}","/* \n   User type code \n*/\nexport enum UserTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // System administrator has access to all accounts and permissions to perform all actions [1] \n    SYSADMIN = 1,\n \n    // Support user has view permissions only for all accounts that enabled option Enable Support [2] \n    SUPPORT = 2,\n \n    // Account user - has access to specific accounts with role based access control [4] \n    USER = 4,\n \n    // Account service - to be used by other systems to perform actions using the API (can't login as a user to the portal)' [5]` \n    SERVICE = 5,\n \n}","\n/* \n*/\nexport class AccountIdRequest {\n \n    // Account Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of AccountIdRequest\n*/\nexport interface IAccountIdRequest {\n \n    // Account Id \n    id?: string;\n \n}\n","\n/* \n *  Entity action response message returned for any create/update action on entity\n*/\nexport class ActionResponse {\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Entity key \n    public key: string;\n \n    // Additional data \n    public data: string;\n \n    constructor(code?: number, error?: string, key?: string, data?: string) { \n        this.code = code;\n        this.error = error;\n        this.key = key;\n        this.data = data;\n    }\n\n}\n\n\n/*\n *  Interface of ActionResponse\n*/\nexport interface IActionResponse {\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Entity key \n    key?: string;\n \n    // Additional data \n    data?: string;\n \n}\n","\n/* \n*/\nexport class ActivityIdRequest {\n \n    // Activity Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of ActivityIdRequest\n*/\nexport interface IActivityIdRequest {\n \n    // Activity Id \n    id?: string;\n \n}\n","import { AccountSettings } from '../common/AccountSettings';\n\n/* \n*/\nexport class AdminAccountSettingsUpdateRequest {\n \n    // Account settings data \n    public body: AccountSettings;\n \n    constructor(body?: AccountSettings) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminAccountSettingsUpdateRequest\n*/\nexport interface IAdminAccountSettingsUpdateRequest {\n \n    // Account settings data \n    body?: AccountSettings;\n \n}\n","import { Activity } from '../entities/Activity';\n\n/* \n*/\nexport class AdminActivityBulkCreateRequest {\n \n    // Array of Resource data \n    public body: Activity[];\n \n    constructor(body?: Activity[]) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminActivityBulkCreateRequest\n*/\nexport interface IAdminActivityBulkCreateRequest {\n \n    // Array of Resource data \n    body?: Activity[];\n \n}\n","\n/* \n*/\nexport class AdminActivityDefaultCreateRequest {\n \n    // Year (4 digits) \n    public year: number;\n \n    // Month (1-12) \n    public month: number;\n \n    // Day (1-31), 0 means create month activities \n    public day: number;\n \n    constructor(year?: number, month?: number, day?: number) { \n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n\n}\n\n\n/*\n *  Interface of AdminActivityDefaultCreateRequest\n*/\nexport interface IAdminActivityDefaultCreateRequest {\n \n    // Year (4 digits) \n    year?: number;\n \n    // Month (1-12) \n    month?: number;\n \n    // Day (1-31), 0 means create month activities \n    day?: number;\n \n}\n","\n/* \n*/\nexport class AdminActivityDefaultDeleteRequest {\n \n    // Year (4 digits) \n    public year: number;\n \n    // Month (1-12) \n    public month: number;\n \n    // Day (1-31), 0 means delete day activities \n    public day: number;\n \n    constructor(year?: number, month?: number, day?: number) { \n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n\n}\n\n\n/*\n *  Interface of AdminActivityDefaultDeleteRequest\n*/\nexport interface IAdminActivityDefaultDeleteRequest {\n \n    // Year (4 digits) \n    year?: number;\n \n    // Month (1-12) \n    month?: number;\n \n    // Day (1-31), 0 means delete day activities \n    day?: number;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n*/\nexport class AdminActivityFindFreeResourcesRequest {\n \n    // Activity Id \n    public id: string;\n \n    // Filter by resource type \n    public resType: number;\n \n    // Filter by weight \n    public weight: number;\n \n    // Filter by usage \n    public forUseBy: AccountRoleCode;\n \n    constructor(id?: string, resType?: number, weight?: number, forUseBy?: AccountRoleCode) { \n        this.id = id;\n        this.resType = resType;\n        this.weight = weight;\n        this.forUseBy = forUseBy;\n    }\n\n}\n\n\n/*\n *  Interface of AdminActivityFindFreeResourcesRequest\n*/\nexport interface IAdminActivityFindFreeResourcesRequest {\n \n    // Activity Id \n    id?: string;\n \n    // Filter by resource type \n    resType?: number;\n \n    // Filter by weight \n    weight?: number;\n \n    // Filter by usage \n    forUseBy?: AccountRoleCode;\n \n}\n","\n/* \n*/\nexport class AdminActivityFindRequest {\n \n    // From time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // To time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // Year \n    public year: number;\n \n    // Month \n    public month: number;\n \n    // Day \n    public day: number;\n \n    constructor(from?: number, to?: number, year?: number, month?: number, day?: number) { \n        this.from = from;\n        this.to = to;\n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n\n}\n\n\n/*\n *  Interface of AdminActivityFindRequest\n*/\nexport interface IAdminActivityFindRequest {\n \n    // From time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // To time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // Year \n    year?: number;\n \n    // Month \n    month?: number;\n \n    // Day \n    day?: number;\n \n}\n","import { ResourceTypeMask } from '../enums/ResourceTypeMask';\n\n/* \n*/\nexport class AdminActivityPlaningRequest {\n \n    // Activity Id \n    public id: string;\n \n    // Filter by resource type mask \n    public resourceType: ResourceTypeMask;\n \n    constructor(id?: string, resourceType?: ResourceTypeMask) { \n        this.id = id;\n        this.resourceType = resourceType;\n    }\n\n}\n\n\n/*\n *  Interface of AdminActivityPlaningRequest\n*/\nexport interface IAdminActivityPlaningRequest {\n \n    // Activity Id \n    id?: string;\n \n    // Filter by resource type mask \n    resourceType?: ResourceTypeMask;\n \n}\n","import { Activity } from '../entities/Activity';\n\n/* \n*/\nexport class AdminCreateActivityRequest {\n \n    // Activity data \n    public body: Activity;\n \n    constructor(body?: Activity) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminCreateActivityRequest\n*/\nexport interface IAdminCreateActivityRequest {\n \n    // Activity data \n    body?: Activity;\n \n}\n","import { Resource } from '../entities/Resource';\n\n/* \n*/\nexport class AdminCreateResourceRequest {\n \n    // Resource data \n    public body: Resource;\n \n    constructor(body?: Resource) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminCreateResourceRequest\n*/\nexport interface IAdminCreateResourceRequest {\n \n    // Resource data \n    body?: Resource;\n \n}\n","\n/* \n*/\nexport class AdminDailyPlaningExportRequest {\n \n    // Planing day \n    public day: number;\n \n    // Report language \n    public lang: string;\n \n    constructor(day?: number, lang?: string) { \n        this.day = day;\n        this.lang = lang;\n    }\n\n}\n\n\n/*\n *  Interface of AdminDailyPlaningExportRequest\n*/\nexport interface IAdminDailyPlaningExportRequest {\n \n    // Planing day \n    day?: number;\n \n    // Report language \n    lang?: string;\n \n}\n","\n/* \n*/\nexport class AdminDailyPlaningRequest {\n \n    // Planing day \n    public day: number;\n \n    constructor(day?: number) { \n        this.day = day;\n    }\n\n}\n\n\n/*\n *  Interface of AdminDailyPlaningRequest\n*/\nexport interface IAdminDailyPlaningRequest {\n \n    // Planing day \n    day?: number;\n \n}\n","\n/* \n*/\nexport class AdminFindFreeResourcesRequest {\n \n    // Booking Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of AdminFindFreeResourcesRequest\n*/\nexport interface IAdminFindFreeResourcesRequest {\n \n    // Booking Id \n    id?: string;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\n\n/* \n*/\nexport class AdminMembersFindRequest {\n \n    // Filter by account id \n    public accountId: string;\n \n    // Filter by partial user name or email \n    public search: string;\n \n    // Filter by account role(s) \n    public role: AccountRoleCode[];\n \n    // Filter by member status(es) \n    public status: MemberStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(accountId?: string, search?: string, role?: AccountRoleCode[], status?: MemberStatusCode[], sort?: string, page?: number, pageSize?: number) { \n        this.accountId = accountId;\n        this.search = search;\n        this.role = role;\n        this.status = status;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of AdminMembersFindRequest\n*/\nexport interface IAdminMembersFindRequest {\n \n    // Filter by account id \n    accountId?: string;\n \n    // Filter by partial user name or email \n    search?: string;\n \n    // Filter by account role(s) \n    role?: AccountRoleCode[];\n \n    // Filter by member status(es) \n    status?: MemberStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","\n/* \n*/\nexport class AdminPlaningAssignResourceRequest {\n \n    // Booking Id \n    public id: string;\n \n    // Resource Id \n    public resourceId: string;\n \n    constructor(id?: string, resourceId?: string) { \n        this.id = id;\n        this.resourceId = resourceId;\n    }\n\n}\n\n\n/*\n *  Interface of AdminPlaningAssignResourceRequest\n*/\nexport interface IAdminPlaningAssignResourceRequest {\n \n    // Booking Id \n    id?: string;\n \n    // Resource Id \n    resourceId?: string;\n \n}\n","\n/* \n*/\nexport class AdminPlaningDeleteActivityRequest {\n \n    // Planing day \n    public day: number;\n \n    // Activity Id to delete \n    public id: string;\n \n    constructor(day?: number, id?: string) { \n        this.day = day;\n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of AdminPlaningDeleteActivityRequest\n*/\nexport interface IAdminPlaningDeleteActivityRequest {\n \n    // Planing day \n    day?: number;\n \n    // Activity Id to delete \n    id?: string;\n \n}\n","\n/* \n*/\nexport class AdminPlaningDeleteBookingRequest {\n \n    // Planing day \n    public day: number;\n \n    // Booking Id to delete \n    public id: string;\n \n    constructor(day?: number, id?: string) { \n        this.day = day;\n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of AdminPlaningDeleteBookingRequest\n*/\nexport interface IAdminPlaningDeleteBookingRequest {\n \n    // Planing day \n    day?: number;\n \n    // Booking Id to delete \n    id?: string;\n \n}\n","\n/* \n*/\nexport class AdminPlaningMergeBookingsRequest {\n \n    // Planing day \n    public day: number;\n \n    // Source Booking Id \n    public source: string;\n \n    // Target Booking Id \n    public target: string;\n \n    constructor(day?: number, source?: string, target?: string) { \n        this.day = day;\n        this.source = source;\n        this.target = target;\n    }\n\n}\n\n\n/*\n *  Interface of AdminPlaningMergeBookingsRequest\n*/\nexport interface IAdminPlaningMergeBookingsRequest {\n \n    // Planing day \n    day?: number;\n \n    // Source Booking Id \n    source?: string;\n \n    // Target Booking Id \n    target?: string;\n \n}\n","\n/* \n*/\nexport class AdminPlaningSplitBookingRequest {\n \n    // Planing day \n    public day: number;\n \n    // Booking Id to split \n    public id: string;\n \n    constructor(day?: number, id?: string) { \n        this.day = day;\n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of AdminPlaningSplitBookingRequest\n*/\nexport interface IAdminPlaningSplitBookingRequest {\n \n    // Planing day \n    day?: number;\n \n    // Booking Id to split \n    id?: string;\n \n}\n","\n/* \n*/\nexport class AdminPlaningUnAssignResourceRequest {\n \n    // Booking Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of AdminPlaningUnAssignResourceRequest\n*/\nexport interface IAdminPlaningUnAssignResourceRequest {\n \n    // Booking Id \n    id?: string;\n \n}\n","import { Resource } from '../entities/Resource';\n\n/* \n*/\nexport class AdminResourceBulkCreateRequest {\n \n    // Array of Resource data \n    public body: Resource[];\n \n    constructor(body?: Resource[]) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminResourceBulkCreateRequest\n*/\nexport interface IAdminResourceBulkCreateRequest {\n \n    // Array of Resource data \n    body?: Resource[];\n \n}\n","import { ResourceClassCode } from '../enums/ResourceClassCode';\nimport { ResourceTypeMask } from '../enums/ResourceTypeMask';\nimport { ResourceStatusCode } from '../enums/ResourceStatusCode';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n*/\nexport class AdminResourceFindRequest {\n \n    // Free text search on resource Id, Brand or description \n    public search: string;\n \n    // Filter by Resource class (UNDEFINED means no filter) \n    public resourceClass: ResourceClassCode;\n \n    // Filter by Resource type (UNDEFINED means no filter) \n    public resourceType: ResourceTypeMask;\n \n    // Filter by Resource status (UNDEFINED means no filter) \n    public status: ResourceStatusCode;\n \n    // Filter by usage (UNDEFINED means no filter) \n    public forUseBy: AccountRoleCode;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(search?: string, resourceClass?: ResourceClassCode, resourceType?: ResourceTypeMask, status?: ResourceStatusCode, forUseBy?: AccountRoleCode, sort?: string, page?: number, pageSize?: number) { \n        this.search = search;\n        this.resourceClass = resourceClass;\n        this.resourceType = resourceType;\n        this.status = status;\n        this.forUseBy = forUseBy;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of AdminResourceFindRequest\n*/\nexport interface IAdminResourceFindRequest {\n \n    // Free text search on resource Id, Brand or description \n    search?: string;\n \n    // Filter by Resource class (UNDEFINED means no filter) \n    resourceClass?: ResourceClassCode;\n \n    // Filter by Resource type (UNDEFINED means no filter) \n    resourceType?: ResourceTypeMask;\n \n    // Filter by Resource status (UNDEFINED means no filter) \n    status?: ResourceStatusCode;\n \n    // Filter by usage (UNDEFINED means no filter) \n    forUseBy?: AccountRoleCode;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","import { Activity } from '../entities/Activity';\n\n/* \n*/\nexport class AdminUpdateActivityRequest {\n \n    // Activity data \n    public body: Activity;\n \n    constructor(body?: Activity) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminUpdateActivityRequest\n*/\nexport interface IAdminUpdateActivityRequest {\n \n    // Activity data \n    body?: Activity;\n \n}\n","import { Resource } from '../entities/Resource';\n\n/* \n*/\nexport class AdminUpdateResourceRequest {\n \n    // Resource data \n    public body: Resource;\n \n    constructor(body?: Resource) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of AdminUpdateResourceRequest\n*/\nexport interface IAdminUpdateResourceRequest {\n \n    // Resource data \n    body?: Resource;\n \n}\n","\n/* \n*/\nexport class BookingIdRequest {\n \n    // Booking Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of BookingIdRequest\n*/\nexport interface IBookingIdRequest {\n \n    // Booking Id \n    id?: string;\n \n}\n","\n/* \n*/\nexport class BookingRequestIdRequest {\n \n    // Booking request Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of BookingRequestIdRequest\n*/\nexport interface IBookingRequestIdRequest {\n \n    // Booking request Id \n    id?: string;\n \n}\n","\n/* \n *  Change Password request message\n*/\nexport class ChangePasswordRequest {\n \n    // User Email \n    public userEmail: string;\n \n    // Old Password \n    public oldPassword: string;\n \n    // New Password \n    public newPassword: string;\n \n    constructor(userEmail?: string, oldPassword?: string, newPassword?: string) { \n        this.userEmail = userEmail;\n        this.oldPassword = oldPassword;\n        this.newPassword = newPassword;\n    }\n\n}\n\n\n/*\n *  Interface of ChangePasswordRequest\n*/\nexport interface IChangePasswordRequest {\n \n    // User Email \n    userEmail?: string;\n \n    // Old Password \n    oldPassword?: string;\n \n    // New Password \n    newPassword?: string;\n \n}\n","\n/* \n*/\nexport class EmptyRequest {\n \n    constructor() { \n    }\n\n}\n\n\n/*\n *  Interface of EmptyRequest\n*/\nexport interface IEmptyRequest {\n \n}\n","\n/* \n*/\nexport class EmptyResponse {\n \n    constructor() { \n    }\n\n}\n\n\n/*\n *  Interface of EmptyResponse\n*/\nexport interface IEmptyResponse {\n \n}\n","\n/* \n *  Entities response message returned for read operation on multiple entities\n*/\nexport class EntitiesResponse {\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    constructor(code?: number, error?: string) { \n        this.code = code;\n        this.error = error;\n    }\n\n}\n\n\n/*\n *  Interface of EntitiesResponse\n*/\nexport interface IEntitiesResponse {\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { Account } from '../entities/Account';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfAccount extends EntitiesResponse {\n \n    // Account list \n    public list: Account[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfAccount\n*/\nexport interface IEntitiesResponseOfAccount extends IEntitiesResponse {\n \n    // Account list \n    list?: Account[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { Activity } from '../entities/Activity';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfActivity extends EntitiesResponse {\n \n    // Activity list \n    public list: Activity[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfActivity\n*/\nexport interface IEntitiesResponseOfActivity extends IEntitiesResponse {\n \n    // Activity list \n    list?: Activity[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { ActivityBookingGroup } from '../entities/ActivityBookingGroup';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n *  EntitiesResponse<ActivityBookingGroup>\n*/\nexport class EntitiesResponseOfActivityBookingGroup extends EntitiesResponse {\n \n    // Activity booking group list \n    public list: ActivityBookingGroup[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfActivityBookingGroup\n*/\nexport interface IEntitiesResponseOfActivityBookingGroup extends IEntitiesResponse {\n \n    // Activity booking group list \n    list?: ActivityBookingGroup[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { Booking } from '../entities/Booking';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfBooking extends EntitiesResponse {\n \n    // Booking list \n    public list: Booking[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfBooking\n*/\nexport interface IEntitiesResponseOfBooking extends IEntitiesResponse {\n \n    // Booking list \n    list?: Booking[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { BookingGroup } from '../entities/BookingGroup';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfBookingGroup extends EntitiesResponse {\n \n    // Booking list \n    public list: BookingGroup[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfBookingGroup\n*/\nexport interface IEntitiesResponseOfBookingGroup extends IEntitiesResponse {\n \n    // Booking list \n    list?: BookingGroup[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { BookingRequest } from '../entities/BookingRequest';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfBookingRequest extends EntitiesResponse {\n \n    // Booking request list \n    public list: BookingRequest[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfBookingRequest\n*/\nexport interface IEntitiesResponseOfBookingRequest extends IEntitiesResponse {\n \n    // Booking request list \n    list?: BookingRequest[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { Membership } from '../entities/Membership';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfMembership extends EntitiesResponse {\n \n    // List of extended Membership data \n    public list: Membership[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfMembership\n*/\nexport interface IEntitiesResponseOfMembership extends IEntitiesResponse {\n \n    // List of extended Membership data \n    list?: Membership[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { Placement } from '../entities/Placement';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfPlacement extends EntitiesResponse {\n \n    // Placement list \n    public list: Placement[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfPlacement\n*/\nexport interface IEntitiesResponseOfPlacement extends IEntitiesResponse {\n \n    // Placement list \n    list?: Placement[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { Resource } from '../entities/Resource';\nimport { EntitiesResponse } from '../messages/EntitiesResponse';\nimport { IEntitiesResponse } from '../messages/EntitiesResponse';\n\n/* \n*/\nexport class EntitiesResponseOfResource extends EntitiesResponse {\n \n    // Resource list \n    public list: Resource[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntitiesResponseOfResource\n*/\nexport interface IEntitiesResponseOfResource extends IEntitiesResponse {\n \n    // Resource list \n    list?: Resource[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","\n/* \n *  Entity response message returned for read operation on a single entity\n*/\nexport class EntityResponse {\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    constructor(code?: number, error?: string) { \n        this.code = code;\n        this.error = error;\n    }\n\n}\n\n\n/*\n *  Interface of EntityResponse\n*/\nexport interface IEntityResponse {\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntityResponse } from '../messages/EntityResponse';\nimport { Account } from '../entities/Account';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfAccount extends EntityResponse {\n \n    // Account \n    public entity: Account;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfAccount\n*/\nexport interface IEntityResponseOfAccount extends IEntityResponse {\n \n    // Account \n    entity?: Account;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { AccountSettings } from '../common/AccountSettings';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfAccountSettings extends EntityResponse {\n \n    // Account settings \n    public entity: AccountSettings;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfAccountSettings\n*/\nexport interface IEntityResponseOfAccountSettings extends IEntityResponse {\n \n    // Account settings \n    entity?: AccountSettings;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { Activity } from '../entities/Activity';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfActivity extends EntityResponse {\n \n    // Activity \n    public entity: Activity;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfActivity\n*/\nexport interface IEntityResponseOfActivity extends IEntityResponse {\n \n    // Activity \n    entity?: Activity;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntityResponse } from '../messages/EntityResponse';\nimport { Booking } from '../entities/Booking';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfBooking extends EntityResponse {\n \n    // Booking \n    public entity: Booking;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfBooking\n*/\nexport interface IEntityResponseOfBooking extends IEntityResponse {\n \n    // Booking \n    entity?: Booking;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { BookingRequest } from '../entities/BookingRequest';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfBookingRequest extends EntityResponse {\n \n    // Booking request \n    public entity: BookingRequest;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfBookingRequest\n*/\nexport interface IEntityResponseOfBookingRequest extends IEntityResponse {\n \n    // Booking request \n    entity?: BookingRequest;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { LoginData } from '../common/LoginData';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfLoginData extends EntityResponse {\n \n    // Login data \n    public entity: LoginData;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfLoginData\n*/\nexport interface IEntityResponseOfLoginData extends IEntityResponse {\n \n    // Login data \n    entity?: LoginData;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntityResponse } from '../messages/EntityResponse';\nimport { Member } from '../entities/Member';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfMember extends EntityResponse {\n \n    // Member data \n    public entity: Member;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfMember\n*/\nexport interface IEntityResponseOfMember extends IEntityResponse {\n \n    // Member data \n    entity?: Member;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { MemberUser } from '../entities/MemberUser';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfMemberUser extends EntityResponse {\n \n    // Extended Member data (with user info) \n    public entity: MemberUser;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfMemberUser\n*/\nexport interface IEntityResponseOfMemberUser extends IEntityResponse {\n \n    // Extended Member data (with user info) \n    entity?: MemberUser;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntityResponse } from '../messages/EntityResponse';\nimport { Placement } from '../entities/Placement';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfPlacement extends EntityResponse {\n \n    // Placement \n    public entity: Placement;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfPlacement\n*/\nexport interface IEntityResponseOfPlacement extends IEntityResponse {\n \n    // Placement \n    entity?: Placement;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { Planing } from '../entities/Planing';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfPlaning extends EntityResponse {\n \n    // Planing \n    public entity: Planing;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfPlaning\n*/\nexport interface IEntityResponseOfPlaning extends IEntityResponse {\n \n    // Planing \n    entity?: Planing;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { EntityResponse } from '../messages/EntityResponse';\nimport { Resource } from '../entities/Resource';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfResource extends EntityResponse {\n \n    // Resource \n    public entity: Resource;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfResource\n*/\nexport interface IEntityResponseOfResource extends IEntityResponse {\n \n    // Resource \n    entity?: Resource;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { User } from '../entities/User';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfUser extends EntityResponse {\n \n    // User data \n    public entity: User;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfUser\n*/\nexport interface IEntityResponseOfUser extends IEntityResponse {\n \n    // User data \n    entity?: User;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","import { UserAccountInfo } from '../common/UserAccountInfo';\nimport { EntityResponse } from '../messages/EntityResponse';\nimport { IEntityResponse } from '../messages/EntityResponse';\n\n/* \n*/\nexport class EntityResponseOfUserAccountInfo extends EntityResponse {\n \n    // User account info \n    public entity: UserAccountInfo;\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n\n}\n\n\n/*\n *  Interface of EntityResponseOfUserAccountInfo\n*/\nexport interface IEntityResponseOfUserAccountInfo extends IEntityResponse {\n \n    // User account info \n    entity?: UserAccountInfo;\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n}\n","\n/* \n*/\nexport class MemberIdRequest {\n \n    // Member Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of MemberIdRequest\n*/\nexport interface IMemberIdRequest {\n \n    // Member Id \n    id?: string;\n \n}\n","import { MemberUser } from '../entities/MemberUser';\n\n/* \n*/\nexport class MembersBulkImportRequest {\n \n    // Array of MemberUser data to import \n    public body: MemberUser[];\n \n    constructor(body?: MemberUser[]) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of MembersBulkImportRequest\n*/\nexport interface IMembersBulkImportRequest {\n \n    // Array of MemberUser data to import \n    body?: MemberUser[];\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\n\n/* \n*/\nexport class MembersFindRequest {\n \n    // Filter by partial user name or email \n    public search: string;\n \n    // Filter by account role(s) \n    public role: AccountRoleCode[];\n \n    // Filter by member status(es) \n    public status: MemberStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(search?: string, role?: AccountRoleCode[], status?: MemberStatusCode[], sort?: string, page?: number, pageSize?: number) { \n        this.search = search;\n        this.role = role;\n        this.status = status;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of MembersFindRequest\n*/\nexport interface IMembersFindRequest {\n \n    // Filter by partial user name or email \n    search?: string;\n \n    // Filter by account role(s) \n    role?: AccountRoleCode[];\n \n    // Filter by member status(es) \n    status?: MemberStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","import { MemberRegistration } from '../common/MemberRegistration';\n\n/* \n*/\nexport class MembersServiceInviteRequest {\n \n    // \n    public body: MemberRegistration;\n \n    constructor(body?: MemberRegistration) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of MembersServiceInviteRequest\n*/\nexport interface IMembersServiceInviteRequest {\n \n    // \n    body?: MemberRegistration;\n \n}\n","import { Member } from '../entities/Member';\n\n/* \n*/\nexport class MembersServiceUpdateRequest {\n \n    // Member data to update \n    public body: Member;\n \n    constructor(body?: Member) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of MembersServiceUpdateRequest\n*/\nexport interface IMembersServiceUpdateRequest {\n \n    // Member data to update \n    body?: Member;\n \n}\n","\n/* \n*/\nexport class MembershipIdRequest {\n \n    // Membership Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of MembershipIdRequest\n*/\nexport interface IMembershipIdRequest {\n \n    // Membership Id \n    id?: string;\n \n}\n","\n/* \n*/\nexport class MembershipsRequest {\n \n    // User Id \n    public userId: string;\n \n    constructor(userId?: string) { \n        this.userId = userId;\n    }\n\n}\n\n\n/*\n *  Interface of MembershipsRequest\n*/\nexport interface IMembershipsRequest {\n \n    // User Id \n    userId?: string;\n \n}\n","\n/* \n*/\nexport class PlacementIdRequest {\n \n    // Placement Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of PlacementIdRequest\n*/\nexport interface IPlacementIdRequest {\n \n    // Placement Id \n    id?: string;\n \n}\n","\n/* \n *  Query response message returned for find operation (with pagination) on multiple entities\n*/\nexport class QueryResponse {\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n    constructor(code?: number, error?: string, page?: number, pageSize?: number, pages?: number, total?: number, queryDef?: string, docType?: string) { \n        this.code = code;\n        this.error = error;\n        this.page = page;\n        this.pageSize = pageSize;\n        this.pages = pages;\n        this.total = total;\n        this.queryDef = queryDef;\n        this.docType = docType;\n    }\n\n}\n\n\n/*\n *  Interface of QueryResponse\n*/\nexport interface IQueryResponse {\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { Account } from '../entities/Account';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfAccount extends QueryResponse {\n \n    // Account list \n    public list: Account[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfAccount\n*/\nexport interface IQueryResponseOfAccount extends IQueryResponse {\n \n    // Account list \n    list?: Account[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { Activity } from '../entities/Activity';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfActivity extends QueryResponse {\n \n    // Activity list \n    public list: Activity[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfActivity\n*/\nexport interface IQueryResponseOfActivity extends IQueryResponse {\n \n    // Activity list \n    list?: Activity[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { Booking } from '../entities/Booking';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfBooking extends QueryResponse {\n \n    // Booking list \n    public list: Booking[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfBooking\n*/\nexport interface IQueryResponseOfBooking extends IQueryResponse {\n \n    // Booking list \n    list?: Booking[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { BookingRequest } from '../entities/BookingRequest';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfBookingRequest extends QueryResponse {\n \n    // Booking request list \n    public list: BookingRequest[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfBookingRequest\n*/\nexport interface IQueryResponseOfBookingRequest extends IQueryResponse {\n \n    // Booking request list \n    list?: BookingRequest[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { QueryResponse } from '../messages/QueryResponse';\nimport { MemberUser } from '../entities/MemberUser';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfMemberUser extends QueryResponse {\n \n    // Extended Member list (with user info) \n    public list: MemberUser[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfMemberUser\n*/\nexport interface IQueryResponseOfMemberUser extends IQueryResponse {\n \n    // Extended Member list (with user info) \n    list?: MemberUser[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { Membership } from '../entities/Membership';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfMembership extends QueryResponse {\n \n    // Membership list \n    public list: Membership[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfMembership\n*/\nexport interface IQueryResponseOfMembership extends IQueryResponse {\n \n    // Membership list \n    list?: Membership[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { QueryResponse } from '../messages/QueryResponse';\nimport { Placement } from '../entities/Placement';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfPlacement extends QueryResponse {\n \n    // Placement list \n    public list: Placement[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfPlacement\n*/\nexport interface IQueryResponseOfPlacement extends IQueryResponse {\n \n    // Placement list \n    list?: Placement[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { Resource } from '../entities/Resource';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfResource extends QueryResponse {\n \n    // Resource list \n    public list: Resource[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfResource\n*/\nexport interface IQueryResponseOfResource extends IQueryResponse {\n \n    // Resource list \n    list?: Resource[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","import { User } from '../entities/User';\nimport { QueryResponse } from '../messages/QueryResponse';\nimport { IQueryResponse } from '../messages/QueryResponse';\n\n/* \n*/\nexport class QueryResponseOfUser extends QueryResponse {\n \n    // User list \n    public list: User[];\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Current page (Bulk) number \n    public page: number;\n \n    // Size of page (items in bulk) \n    public pageSize: number;\n \n    // Total number of pages \n    public pages: number;\n \n    // Total number of items in the query \n    public total: number;\n \n    // Query definition spec as Json string \n    public queryDef: string;\n \n    // Entity type \n    public docType: string;\n \n\n}\n\n\n/*\n *  Interface of QueryResponseOfUser\n*/\nexport interface IQueryResponseOfUser extends IQueryResponse {\n \n    // User list \n    list?: User[];\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Current page (Bulk) number \n    page?: number;\n \n    // Size of page (items in bulk) \n    pageSize?: number;\n \n    // Total number of pages \n    pages?: number;\n \n    // Total number of items in the query \n    total?: number;\n \n    // Query definition spec as Json string \n    queryDef?: string;\n \n    // Entity type \n    docType?: string;\n \n}\n","\n/* \n*/\nexport class ResourceIdRequest {\n \n    // Resource Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of ResourceIdRequest\n*/\nexport interface IResourceIdRequest {\n \n    // Resource Id \n    id?: string;\n \n}\n","\n/* \n *  Response of byte array\n*/\nexport class StreamResponse {\n \n    // \n    public content: string;\n \n    constructor(content?: string) { \n        this.content = content;\n    }\n\n}\n\n\n/*\n *  Interface of StreamResponse\n*/\nexport interface IStreamResponse {\n \n    // \n    content?: string;\n \n}\n","import { Account } from '../entities/Account';\n\n/* \n*/\nexport class SysAdminAccountCreateRequest {\n \n    // Account data \n    public body: Account;\n \n    constructor(body?: Account) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of SysAdminAccountCreateRequest\n*/\nexport interface ISysAdminAccountCreateRequest {\n \n    // Account data \n    body?: Account;\n \n}\n","\n/* \n*/\nexport class SysAdminAccountResetRequest {\n \n    // Account Id \n    public id: string;\n \n    // Retention time in days \n    public days: number;\n \n    constructor(id?: string, days?: number) { \n        this.id = id;\n        this.days = days;\n    }\n\n}\n\n\n/*\n *  Interface of SysAdminAccountResetRequest\n*/\nexport interface ISysAdminAccountResetRequest {\n \n    // Account Id \n    id?: string;\n \n    // Retention time in days \n    days?: number;\n \n}\n","import { Account } from '../entities/Account';\n\n/* \n*/\nexport class SysAdminAccountUpdateRequest {\n \n    // Account data \n    public body: Account;\n \n    constructor(body?: Account) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of SysAdminAccountUpdateRequest\n*/\nexport interface ISysAdminAccountUpdateRequest {\n \n    // Account data \n    body?: Account;\n \n}\n","import { AccountTypeCode } from '../enums/AccountTypeCode';\nimport { AccountStatusCode } from '../enums/AccountStatusCode';\n\n/* \n*/\nexport class SysAdminAccountsFindRequest {\n \n    // Filter by name or partial name \n    public search: string;\n \n    // Filter by type(s) (empty or UNDEFINED means no filter) \n    public type: AccountTypeCode[];\n \n    // Filter by status(s) (empty or UNDEFINED means no filter) \n    public status: AccountStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(search?: string, type?: AccountTypeCode[], status?: AccountStatusCode[], sort?: string, page?: number, pageSize?: number) { \n        this.search = search;\n        this.type = type;\n        this.status = status;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of SysAdminAccountsFindRequest\n*/\nexport interface ISysAdminAccountsFindRequest {\n \n    // Filter by name or partial name \n    search?: string;\n \n    // Filter by type(s) (empty or UNDEFINED means no filter) \n    type?: AccountTypeCode[];\n \n    // Filter by status(s) (empty or UNDEFINED means no filter) \n    status?: AccountStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","\n/* \n *  Token request message\n*/\nexport class TokenRequest {\n \n    // Error code (0 for success) \n    public code: number;\n \n    // Error message \n    public error: string;\n \n    // Account Id \n    public accountId: string;\n \n    constructor(code?: number, error?: string, accountId?: string) { \n        this.code = code;\n        this.error = error;\n        this.accountId = accountId;\n    }\n\n}\n\n\n/*\n *  Interface of TokenRequest\n*/\nexport interface ITokenRequest {\n \n    // Error code (0 for success) \n    code?: number;\n \n    // Error message \n    error?: string;\n \n    // Account Id \n    accountId?: string;\n \n}\n","import { AccountStatusCode } from '../enums/AccountStatusCode';\nimport { AccountTypeCode } from '../enums/AccountTypeCode';\n\n/* \n*/\nexport class UserAccountsFindRequest {\n \n    // Filter by name or partial name \n    public search: string;\n \n    // Filter by type(s) (empty or UNDEFINED means no filter) \n    public type: AccountTypeCode[];\n \n    // Filter by status(s) (empty or UNDEFINED means no filter) \n    public status: AccountStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(search?: string, type?: AccountTypeCode[], status?: AccountStatusCode[], sort?: string, page?: number, pageSize?: number) { \n        this.search = search;\n        this.type = type;\n        this.status = status;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of UserAccountsFindRequest\n*/\nexport interface IUserAccountsFindRequest {\n \n    // Filter by name or partial name \n    search?: string;\n \n    // Filter by type(s) (empty or UNDEFINED means no filter) \n    type?: AccountTypeCode[];\n \n    // Filter by status(s) (empty or UNDEFINED means no filter) \n    status?: AccountStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","\n/* \n*/\nexport class UserBookingFindRequest {\n \n    // Filter by user who placed the booking \n    public userId: string;\n \n    // Filter by resource Id \n    public resourceId: string;\n \n    // From booking time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(userId?: string, resourceId?: string, from?: number, to?: number, sort?: string, page?: number, pageSize?: number) { \n        this.userId = userId;\n        this.resourceId = resourceId;\n        this.from = from;\n        this.to = to;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of UserBookingFindRequest\n*/\nexport interface IUserBookingFindRequest {\n \n    // Filter by user who placed the booking \n    userId?: string;\n \n    // Filter by resource Id \n    resourceId?: string;\n \n    // From booking time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","import { TimeUnitCode } from '../enums/TimeUnitCode';\n\n/* \n*/\nexport class UserBookingGroupRequest {\n \n    // From booking time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // Group by time period \n    public groupBy: TimeUnitCode;\n \n    constructor(from?: number, to?: number, groupBy?: TimeUnitCode) { \n        this.from = from;\n        this.to = to;\n        this.groupBy = groupBy;\n    }\n\n}\n\n\n/*\n *  Interface of UserBookingGroupRequest\n*/\nexport interface IUserBookingGroupRequest {\n \n    // From booking time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // Group by time period \n    groupBy?: TimeUnitCode;\n \n}\n","\n/* \n*/\nexport class UserBookingRequestFindRequest {\n \n    // Filter by user who placed the booking \n    public userId: string;\n \n    // Filter by resource Id \n    public resourceId: string;\n \n    // From booking time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(userId?: string, resourceId?: string, from?: number, to?: number, sort?: string, page?: number, pageSize?: number) { \n        this.userId = userId;\n        this.resourceId = resourceId;\n        this.from = from;\n        this.to = to;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of UserBookingRequestFindRequest\n*/\nexport interface IUserBookingRequestFindRequest {\n \n    // Filter by user who placed the booking \n    userId?: string;\n \n    // Filter by resource Id \n    resourceId?: string;\n \n    // From booking time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","\n/* \n*/\nexport class UserByEmailRequest {\n \n    // User email \n    public email: string;\n \n    constructor(email?: string) { \n        this.email = email;\n    }\n\n}\n\n\n/*\n *  Interface of UserByEmailRequest\n*/\nexport interface IUserByEmailRequest {\n \n    // User email \n    email?: string;\n \n}\n","import { Booking } from '../entities/Booking';\n\n/* \n*/\nexport class UserCreateBookingRequest {\n \n    // Booking data \n    public body: Booking;\n \n    constructor(body?: Booking) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserCreateBookingRequest\n*/\nexport interface IUserCreateBookingRequest {\n \n    // Booking data \n    body?: Booking;\n \n}\n","import { BookingRequest } from '../entities/BookingRequest';\n\n/* \n*/\nexport class UserCreateBookingRequestRequest {\n \n    // Booking request data \n    public body: BookingRequest;\n \n    constructor(body?: BookingRequest) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserCreateBookingRequestRequest\n*/\nexport interface IUserCreateBookingRequestRequest {\n \n    // Booking request data \n    body?: BookingRequest;\n \n}\n","import { Placement } from '../entities/Placement';\n\n/* \n*/\nexport class UserCreatePlacementRequest {\n \n    // Placement data \n    public body: Placement;\n \n    constructor(body?: Placement) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserCreatePlacementRequest\n*/\nexport interface IUserCreatePlacementRequest {\n \n    // Placement data \n    body?: Placement;\n \n}\n","\n/* \n*/\nexport class UserIdRequest {\n \n    // User Id \n    public id: string;\n \n    constructor(id?: string) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of UserIdRequest\n*/\nexport interface IUserIdRequest {\n \n    // User Id \n    id?: string;\n \n}\n","\n/* \n*/\nexport class UserIdsRequest {\n \n    // User Id list \n    public id: string[];\n \n    constructor(id?: string[]) { \n        this.id = id;\n    }\n\n}\n\n\n/*\n *  Interface of UserIdsRequest\n*/\nexport interface IUserIdsRequest {\n \n    // User Id list \n    id?: string[];\n \n}\n","import { BookingStatusCode } from '../enums/BookingStatusCode';\n\n/* \n*/\nexport class UserPlacementFindRequest {\n \n    // Filter by user who placed the booking \n    public userId: string;\n \n    // Filter by resource Id \n    public resourceId: string;\n \n    // From booking time [Epoch milliseconds Timestamp] \n    public from: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    public to: number;\n \n    // Filter by referenced booking Id \n    public bookingId: string;\n \n    // Filter by booking status \n    public status: BookingStatusCode;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(userId?: string, resourceId?: string, from?: number, to?: number, bookingId?: string, status?: BookingStatusCode, sort?: string, page?: number, pageSize?: number) { \n        this.userId = userId;\n        this.resourceId = resourceId;\n        this.from = from;\n        this.to = to;\n        this.bookingId = bookingId;\n        this.status = status;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of UserPlacementFindRequest\n*/\nexport interface IUserPlacementFindRequest {\n \n    // Filter by user who placed the booking \n    userId?: string;\n \n    // Filter by resource Id \n    resourceId?: string;\n \n    // From booking time [Epoch milliseconds Timestamp] \n    from?: number;\n \n    // To booking time [Epoch milliseconds Timestamp] \n    to?: number;\n \n    // Filter by referenced booking Id \n    bookingId?: string;\n \n    // Filter by booking status \n    status?: BookingStatusCode;\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","\n/* \n*/\nexport class UserServiceChangeMobileRequest {\n \n    // User mobile to update \n    public body: string;\n \n    constructor(body?: string) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceChangeMobileRequest\n*/\nexport interface IUserServiceChangeMobileRequest {\n \n    // User mobile to update \n    body?: string;\n \n}\n","\n/* \n*/\nexport class UserServiceChangeNameRequest {\n \n    // User name to update \n    public body: string;\n \n    constructor(body?: string) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceChangeNameRequest\n*/\nexport interface IUserServiceChangeNameRequest {\n \n    // User name to update \n    body?: string;\n \n}\n","import { ChangePasswordRequest } from '../messages/ChangePasswordRequest';\n\n/* \n*/\nexport class UserServiceChangePasswordRequest {\n \n    // \n    public body: ChangePasswordRequest;\n \n    constructor(body?: ChangePasswordRequest) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceChangePasswordRequest\n*/\nexport interface IUserServiceChangePasswordRequest {\n \n    // \n    body?: ChangePasswordRequest;\n \n}\n","\n/* \n*/\nexport class UserServiceCheckPasswordRequest {\n \n    // \n    public body: string;\n \n    constructor(body?: string) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceCheckPasswordRequest\n*/\nexport interface IUserServiceCheckPasswordRequest {\n \n    // \n    body?: string;\n \n}\n","import { LoginParams } from '../common/LoginParams';\n\n/* \n*/\nexport class UserServiceLoginRequest {\n \n    // \n    public body: LoginParams;\n \n    constructor(body?: LoginParams) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceLoginRequest\n*/\nexport interface IUserServiceLoginRequest {\n \n    // \n    body?: LoginParams;\n \n}\n","\n/* \n*/\nexport class UserServiceResetPasswordRequest {\n \n    // Verification code \n    public code: string;\n \n    constructor(code?: string) { \n        this.code = code;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceResetPasswordRequest\n*/\nexport interface IUserServiceResetPasswordRequest {\n \n    // Verification code \n    code?: string;\n \n}\n","\n/* \n*/\nexport class UserServiceSendVerificationRequest {\n \n    // Email to send code \n    public body: string;\n \n    constructor(body?: string) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceSendVerificationRequest\n*/\nexport interface IUserServiceSendVerificationRequest {\n \n    // Email to send code \n    body?: string;\n \n}\n","import { TokenRequest } from '../messages/TokenRequest';\n\n/* \n*/\nexport class UserServiceSwitchAccountRequest {\n \n    // Token request info \n    public body: TokenRequest;\n \n    constructor(body?: TokenRequest) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceSwitchAccountRequest\n*/\nexport interface IUserServiceSwitchAccountRequest {\n \n    // Token request info \n    body?: TokenRequest;\n \n}\n","import { User } from '../entities/User';\n\n/* \n*/\nexport class UserServiceUpdateRequest {\n \n    // User data to update \n    public body: User;\n \n    constructor(body?: User) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceUpdateRequest\n*/\nexport interface IUserServiceUpdateRequest {\n \n    // User data to update \n    body?: User;\n \n}\n","\n/* \n*/\nexport class UserServiceVerifyLoginRequest {\n \n    // \n    public key: string;\n \n    constructor(key?: string) { \n        this.key = key;\n    }\n\n}\n\n\n/*\n *  Interface of UserServiceVerifyLoginRequest\n*/\nexport interface IUserServiceVerifyLoginRequest {\n \n    // \n    key?: string;\n \n}\n","\n/* \n*/\nexport class UserTokenRequest {\n \n    // User Id \n    public id: string;\n \n    // Expiration time [Epoch milliseconds Timestamp] \n    public exp: number;\n \n    constructor(id?: string, exp?: number) { \n        this.id = id;\n        this.exp = exp;\n    }\n\n}\n\n\n/*\n *  Interface of UserTokenRequest\n*/\nexport interface IUserTokenRequest {\n \n    // User Id \n    id?: string;\n \n    // Expiration time [Epoch milliseconds Timestamp] \n    exp?: number;\n \n}\n","import { Booking } from '../entities/Booking';\n\n/* \n*/\nexport class UserUpdateBookingRequest {\n \n    // Booking data \n    public body: Booking;\n \n    constructor(body?: Booking) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserUpdateBookingRequest\n*/\nexport interface IUserUpdateBookingRequest {\n \n    // Booking data \n    body?: Booking;\n \n}\n","import { BookingRequest } from '../entities/BookingRequest';\n\n/* \n*/\nexport class UserUpdateBookingRequestRequest {\n \n    // Booking request data \n    public body: BookingRequest;\n \n    constructor(body?: BookingRequest) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserUpdateBookingRequestRequest\n*/\nexport interface IUserUpdateBookingRequestRequest {\n \n    // Booking request data \n    body?: BookingRequest;\n \n}\n","import { Placement } from '../entities/Placement';\n\n/* \n*/\nexport class UserUpdatePlacementRequest {\n \n    // Placement data \n    public body: Placement;\n \n    constructor(body?: Placement) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UserUpdatePlacementRequest\n*/\nexport interface IUserUpdatePlacementRequest {\n \n    // Placement data \n    body?: Placement;\n \n}\n","\n/* \n*/\nexport class UsersServiceChangeDefaultAccountRequest {\n \n    // User Id \n    public id: string;\n \n    // Default account Id \n    public accountId: string;\n \n    constructor(id?: string, accountId?: string) { \n        this.id = id;\n        this.accountId = accountId;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceChangeDefaultAccountRequest\n*/\nexport interface IUsersServiceChangeDefaultAccountRequest {\n \n    // User Id \n    id?: string;\n \n    // Default account Id \n    accountId?: string;\n \n}\n","\n/* \n*/\nexport class UsersServiceChangeMobileRequest {\n \n    // User Id \n    public id: string;\n \n    // User mobile to update \n    public body: string;\n \n    constructor(id?: string, body?: string) { \n        this.id = id;\n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceChangeMobileRequest\n*/\nexport interface IUsersServiceChangeMobileRequest {\n \n    // User Id \n    id?: string;\n \n    // User mobile to update \n    body?: string;\n \n}\n","\n/* \n*/\nexport class UsersServiceChangeNameRequest {\n \n    // User Id \n    public id: string;\n \n    // User name to update \n    public body: string;\n \n    constructor(id?: string, body?: string) { \n        this.id = id;\n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceChangeNameRequest\n*/\nexport interface IUsersServiceChangeNameRequest {\n \n    // User Id \n    id?: string;\n \n    // User name to update \n    body?: string;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n*/\nexport class UsersServiceChangeRoleRequest {\n \n    // User Id \n    public id: string;\n \n    // User role to update \n    public role: AccountRoleCode;\n \n    constructor(id?: string, role?: AccountRoleCode) { \n        this.id = id;\n        this.role = role;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceChangeRoleRequest\n*/\nexport interface IUsersServiceChangeRoleRequest {\n \n    // User Id \n    id?: string;\n \n    // User role to update \n    role?: AccountRoleCode;\n \n}\n","import { UserStatusCode } from '../enums/UserStatusCode';\n\n/* \n*/\nexport class UsersServiceChangeStatusRequest {\n \n    // User Id \n    public id: string;\n \n    // User status to update \n    public status: UserStatusCode;\n \n    constructor(id?: string, status?: UserStatusCode) { \n        this.id = id;\n        this.status = status;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceChangeStatusRequest\n*/\nexport interface IUsersServiceChangeStatusRequest {\n \n    // User Id \n    id?: string;\n \n    // User status to update \n    status?: UserStatusCode;\n \n}\n","import { UserTypeCode } from '../enums/UserTypeCode';\n\n/* \n*/\nexport class UsersServiceChangeTypeRequest {\n \n    // User Id \n    public id: string;\n \n    // User type to update \n    public type: UserTypeCode;\n \n    constructor(id?: string, type?: UserTypeCode) { \n        this.id = id;\n        this.type = type;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceChangeTypeRequest\n*/\nexport interface IUsersServiceChangeTypeRequest {\n \n    // User Id \n    id?: string;\n \n    // User type to update \n    type?: UserTypeCode;\n \n}\n","import { UserRegistration } from '../common/UserRegistration';\n\n/* \n*/\nexport class UsersServiceCreateRequest {\n \n    // \n    public body: UserRegistration;\n \n    constructor(body?: UserRegistration) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceCreateRequest\n*/\nexport interface IUsersServiceCreateRequest {\n \n    // \n    body?: UserRegistration;\n \n}\n","import { UserTypeCode } from '../enums/UserTypeCode';\nimport { UserStatusCode } from '../enums/UserStatusCode';\n\n/* \n*/\nexport class UsersServiceExportRequest {\n \n    // Filter by name or partial name or id \n    public search: string;\n \n    // Filter by user type(s) (empty or UNDEFINED for no filter) \n    public type: UserTypeCode[];\n \n    // Filter by user status(es) (empty or UNDEFINED for no filter) \n    public status: UserStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Export results to a different format. Supported formats: csv | json | xml \n    public format: string;\n \n    // List of fields to export (leave empty to export all fields) \n    public fields: string[];\n \n    constructor(search?: string, type?: UserTypeCode[], status?: UserStatusCode[], sort?: string, format?: string, fields?: string[]) { \n        this.search = search;\n        this.type = type;\n        this.status = status;\n        this.sort = sort;\n        this.format = format;\n        this.fields = fields;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceExportRequest\n*/\nexport interface IUsersServiceExportRequest {\n \n    // Filter by name or partial name or id \n    search?: string;\n \n    // Filter by user type(s) (empty or UNDEFINED for no filter) \n    type?: UserTypeCode[];\n \n    // Filter by user status(es) (empty or UNDEFINED for no filter) \n    status?: UserStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Export results to a different format. Supported formats: csv | json | xml \n    format?: string;\n \n    // List of fields to export (leave empty to export all fields) \n    fields?: string[];\n \n}\n","import { UserTypeCode } from '../enums/UserTypeCode';\nimport { UserStatusCode } from '../enums/UserStatusCode';\n\n/* \n*/\nexport class UsersServiceFindRequest {\n \n    // Filter by account id (get only Account Users with access to the accountId) \n    public accountId: string;\n \n    // Filter by name or partial name or id \n    public search: string;\n \n    // Filter by user type(s) (empty or UNDEFINED for no filter) \n    public type: UserTypeCode[];\n \n    // Filter by user status(es) (empty or UNDEFINED for no filter) \n    public status: UserStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    public sort: string;\n \n    // Page number (for pagination) \n    public page: number;\n \n    // Number of items per page (for pagination) \n    public pageSize: number;\n \n    constructor(accountId?: string, search?: string, type?: UserTypeCode[], status?: UserStatusCode[], sort?: string, page?: number, pageSize?: number) { \n        this.accountId = accountId;\n        this.search = search;\n        this.type = type;\n        this.status = status;\n        this.sort = sort;\n        this.page = page;\n        this.pageSize = pageSize;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceFindRequest\n*/\nexport interface IUsersServiceFindRequest {\n \n    // Filter by account id (get only Account Users with access to the accountId) \n    accountId?: string;\n \n    // Filter by name or partial name or id \n    search?: string;\n \n    // Filter by user type(s) (empty or UNDEFINED for no filter) \n    type?: UserTypeCode[];\n \n    // Filter by user status(es) (empty or UNDEFINED for no filter) \n    status?: UserStatusCode[];\n \n    // Sort by field and direction: (e.g. time+ = sort by time asc, id- = sort by id desc) \n    sort?: string;\n \n    // Page number (for pagination) \n    page?: number;\n \n    // Number of items per page (for pagination) \n    pageSize?: number;\n \n}\n","import { UserInvitation } from '../common/UserInvitation';\n\n/* \n*/\nexport class UsersServiceInviteRequest {\n \n    // \n    public body: UserInvitation;\n \n    constructor(body?: UserInvitation) { \n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceInviteRequest\n*/\nexport interface IUsersServiceInviteRequest {\n \n    // \n    body?: UserInvitation;\n \n}\n","import { AccountRoleCode } from '../enums/AccountRoleCode';\n\n/* \n*/\nexport class UsersServiceSetRolesRequest {\n \n    // User Id \n    public id: string;\n \n    // User roles to update \n    public roles: AccountRoleCode[];\n \n    constructor(id?: string, roles?: AccountRoleCode[]) { \n        this.id = id;\n        this.roles = roles;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceSetRolesRequest\n*/\nexport interface IUsersServiceSetRolesRequest {\n \n    // User Id \n    id?: string;\n \n    // User roles to update \n    roles?: AccountRoleCode[];\n \n}\n","import { User } from '../entities/User';\n\n/* \n*/\nexport class UsersServiceUpdateRequest {\n \n    // User Id \n    public id: string;\n \n    // User data to update \n    public body: User;\n \n    constructor(id?: string, body?: User) { \n        this.id = id;\n        this.body = body;\n    }\n\n}\n\n\n/*\n *  Interface of UsersServiceUpdateRequest\n*/\nexport interface IUsersServiceUpdateRequest {\n \n    // User Id \n    id?: string;\n \n    // User data to update \n    body?: User;\n \n}\n","\n/* \n *  @WebSocketMessage Message header for all web socket messages\n*/\nexport class WebSocketMessageHeader {\n \n    // \n    public op: number;\n \n    // \n    public ver: number;\n \n    // \n    public id: number;\n \n    // \n    public cid: number;\n \n    // \n    public sid: string;\n \n    constructor(opcode?: number, version?: number, messageId?: number, correlationId?: number, sessionId?: string) { \n        this.op = opcode;\n        this.ver = version;\n        this.id = messageId;\n        this.cid = correlationId;\n        this.sid = sessionId;\n    }\n\n}\n\n\n/*\n *  Interface of WebSocketMessageHeader\n*/\nexport interface IWebSocketMessageHeader {\n \n    // \n    op?: number;\n \n    // \n    ver?: number;\n \n    // \n    id?: number;\n \n    // \n    cid?: number;\n \n    // \n    sid?: string;\n \n}\n","// Access token key in the local storage\nconst tokenKey = 'portalAccessToken';\nconst loginKey = 'portalLoginData';\n\nexport function getToken() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport function setToken(token) {\n  localStorage.setItem(tokenKey, token);\n}\n\nexport function removeToken() {\n  localStorage.removeItem(tokenKey);\n  localStorage.removeItem(loginKey);\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';  // replaces previous Http service\nimport { map, catchError } from 'rxjs/operators';\nimport * as LocalStorageUtil from './localStorage-util';\n\n/**\n * Utility class for all REST services with common functions\n */\n@Injectable()\nexport class RestUtil {\n\n  // Set headers\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  /**\n   * Constructor with injected authentication service\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Download is HTTP GET action but the content is blob\n   */\n  download(fileName: string, url: string, ...params: string[]) {\n    const resourceUrl = this.buildUrl(url, ...params);\n\n    let ext = 'json';\n    params.forEach(p => {\n      let arr = p.split('=');\n      if (arr.length > 1) {\n        if (arr[0].toLowerCase() === 'format') {\n          ext = arr[1];\n        }\n      }\n    });\n    \n    const downloadLink = fileName + '.' + ext;\n\n    return this.http.get(resourceUrl, {responseType: 'blob'}).subscribe((data) => {\n      const downloadURL = window.URL.createObjectURL(data);\n      const link = document.createElement('a');\n      link.href = downloadURL;\n      link.download = downloadLink;\n      link.click();\n    });\n\n  }\n  \n  /**\n   * HTTP GET action\n   */\n  get(url: string, ...params: string[]) {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http\n      .get(resourceUrl, { headers: this.headers, observe: 'response' })\n      .pipe(\n        map((res: HttpResponse<any>) => this.processResponse(res)),\n        catchError(this.handleError),\n      );\n  }\n\n  /**\n   * HTTP POST action\n   */\n  post(url: string, body: string, ...params: string[]) {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http\n      .post(resourceUrl, body, { headers: this.headers, observe: 'response' })\n      .pipe(\n        map((res: HttpResponse<any>) => this.processResponse(res)),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * HTTP PUT action\n   */\n  put(url: string, body: string, ...params: string[]) {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http\n      .put(resourceUrl, body, { headers: this.headers, observe: 'response' })\n      .pipe(\n        map((res: HttpResponse<any>) => this.processResponse(res)),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * HTTP DELETE action\n   */\n  delete(url: string, ...params: string[]) {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http\n      .delete(resourceUrl, { headers: this.headers, observe: 'response' })\n      .pipe(\n        map((res: HttpResponse<any>) => this.processResponse(res)),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Construct URL with parameters\n   */\n  private buildUrl(url: string, ...params: string[]) {\n    return (params === null) ? url : (params.length === 0) ? url : `${url}${params && params.length > 0 ? '?'+params.join('&') : ''}`;\n  }\n\n  /**\n   * Process the response, extract and refresh access token and return the body\n   */\n  private processResponse(response: HttpResponse<any>) {\n\n    if (response.status === 401) {\n      LocalStorageUtil.removeToken();\n      throw new Error('Access denied, reset token: ' + response.status);\n    } else if (response.status > 400) {\n      throw new Error('HTTP status error: ' + response.status);\n    }\n\n    // Get access token from header and update authentication service\n\n    const accessToken = response.headers.get('X-ACCESS-TOKEN');\n\n    if ((accessToken !== null) && (accessToken.length > 0)) {\n      LocalStorageUtil.setToken(accessToken);\n    } \n    \n    if (response.body && response.body.code && response.body.code !== 0) {\n      throw { code: response.body.code, message: response.body.error };\n    }\n    \n    return response.body;\n  }\n\n  /**\n   * Error handling\n   */\n  private handleError(error: any): Promise<any> {\n    if (error.code) {\n      return Promise.reject(error);\n    }\n    return Promise.reject(error.message || error);\n  }\n}\n","export class CoreConfig {\n    api: string;\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { AccountSettings } from '../common/AccountSettings';\n\n\n/**\n * List of account related actions for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (console)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class AdminAccountService {\n\n  // URL to web api\n  private baseUrl = '/admin/account';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Get account settings\n   * @Return: EntityResponse<AccountSettings>\n   */\n  getSettings() {\n    return this.rest.get(`${this.baseUrl}/settings`);\n  }\n\n  /**\n   * Update existing account settings in the system\n   * @Return: EntityResponse<AccountSettings>\n   */\n  updateSettings(body?: AccountSettings) {\n    return this.rest.put(`${this.baseUrl}/settings`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { Activity } from '../entities/Activity';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\n\n\n/**\n * Services for managing club activities - for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (portal)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class AdminActivitiesService {\n\n  // URL to web api\n  private baseUrl = '/admin/activities';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new activity\n   * @Return: EntityResponse<Activity>\n   */\n  create(body?: Activity) {\n    return this.rest.post(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update activity\n   * @Return: EntityResponse<Activity>\n   */\n  update(body?: Activity) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete activity\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get single activity by id\n   * @Return: EntityResponse<Activity>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get previous activity related to this activity id\n   * @Return: EntityResponse<Activity>\n   */\n  prev(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}/prev`);\n  }\n\n  /**\n   * Get next activity related to this activity id\n   * @Return: EntityResponse<Activity>\n   */\n  next(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}/next`);\n  }\n\n  /**\n   * Find activities by time range\n   * @Return: QueryResponse<Activity>\n   */\n  find(from?: number, to?: number, year?: number, month?: number, day?: number) {\n    const params = new Array();\t\t\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (year != null) { params.push(`year=${year}`); }\n    if (month != null) { params.push(`month=${month}`); }\n    if (day != null) { params.push(`day=${day}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n  /**\n   * Find list of free resources for activity by filter\n   * @Return: EntitiesResponse<Resource>\n   */\n  findFreeResources(id?: string, resType?: number, weight?: number, forUseBy?: AccountRoleCode) {\n    const params = new Array();\t\t\n    if (resType != null) { params.push(`resType=${resType}`); }\n    if (weight != null) { params.push(`weight=${weight}`); }\n    if (forUseBy != null) { params.push(`forUseBy=${forUseBy}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}/${id}/resources`, ...params);\n  }\n\n  /**\n   * Create bulk set of activities\n   * @Return: ActionResponse\n   */\n  createBulk(body?: Activity[]) {\n    return this.rest.post(`${this.baseUrl}/bulk`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Create account default set of activities per month\n   * @Return: ActionResponse\n   */\n  createDefault(year?: number, month?: number, day?: number) {\n    const params = new Array();\t\t\n    if (year != null) { params.push(`year=${year}`); }\n    if (month != null) { params.push(`month=${month}`); }\n    if (day != null) { params.push(`day=${day}`); }\n\n\t\treturn this.rest.post(`${this.baseUrl}/default`, null, ...params);\n  }\n\n  /**\n   * Clear all month activities\n   * @Return: ActionResponse\n   */\n  clearDefault(year?: number, month?: number, day?: number) {\n    const params = new Array();\t\t\n    if (year != null) { params.push(`year=${year}`); }\n    if (month != null) { params.push(`month=${month}`); }\n    if (day != null) { params.push(`day=${day}`); }\n\n\t\treturn this.rest.delete(`${this.baseUrl}/default`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { Member } from '../entities/Member';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\nimport { MemberUser } from '../entities/MemberUser';\nimport { MemberRegistration } from '../common/MemberRegistration';\n\n\n/**\n * List of all user related actions for account administrator only \n */\n@Injectable()\nexport class AdminMembersService {\n\n  // URL to web api\n  private baseUrl = '/admin/members';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Send invitation to a new member for the current account\n   * @Return: ActionResponse\n   */\n  invite(body?: MemberRegistration) {\n    return this.rest.post(`${this.baseUrl}/invite`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Resend invitation to an existing member for the current account\n   * @Return: ActionResponse\n   */\n  reInvite(id?: string) {\n    return this.rest.post(`${this.baseUrl}/re-invite/${id}`, null);\n  }\n\n  /**\n   * Update member\n   * @Return: EntityResponse<Member>\n   */\n  update(body?: Member) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete member from the account\n   * The member will be removed from the account, if no other memberships exist for the user, it will be deleted from the system\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get single member by id (including user data)\n   * @Return: EntityResponse<MemberUser>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get single member by id (including user data)\n   * @Return: EntityResponse<User>\n   */\n  getUserByEmail(email?: string) {\n    return this.rest.get(`${this.baseUrl}/email/${email}`);\n  }\n\n  /**\n   * Get user memberships (in all accounts)\n   * @Return: QueryResponse<Membership>\n   */\n  getUserMemberships(userId?: string) {\n    return this.rest.get(`${this.baseUrl}/memberships/${userId}`);\n  }\n\n  /**\n   * Find list of users and filter the list\n   * System user will see all users, Account system will see all users of the account, registered user will get an error.\n   * @Return: QueryResponse<MemberUser>\n   */\n  find(accountId?: string, search?: string, role?: AccountRoleCode[], status?: MemberStatusCode[], sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (accountId != null) { params.push(`accountId=${accountId}`); }\n    if (search != null) { params.push(`search=${search}`); }\n    if (role != null) { params.push(`role=${role}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n  /**\n   * Import bulk set of members\n   * @Return: ActionResponse\n   */\n  bulkImport(body?: MemberUser[]) {\n    return this.rest.post(`${this.baseUrl}/import`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\n\n\n/**\n * Services for planing club resource placements - for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (portal)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class AdminPlaningService {\n\n  // URL to web api\n  private baseUrl = '/admin/planing';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Get daily planing - bookings group by activities\n   * @Return: EntitiesResponse<ActivityBookingGroup>\n   */\n  getDailyPlaning(day?: number) {\n    return this.rest.get(`${this.baseUrl}/daily/${day}`);\n  }\n\n  /**\n   * Export daily planing - as PDF stream\n   * @Return: StreamContent\n   */\n  exportDailyPlaning(day?: number, lang?: string) {\n    const params = new Array();\t\t\n    if (lang != null) { params.push(`lang=${lang}`); }\n\n\t\treturn this.rest.download(`admin-planing`,`${this.baseUrl}/daily/${day}/export`, ...params);\n  }\n\n  /**\n   * Find list of free resources for the booking request\n   * @Return: EntitiesResponse<Resource>\n   */\n  findFreeResources(id?: string) {\n    return this.rest.get(`${this.baseUrl}/bookings/${id}/resources`);\n  }\n\n  /**\n   * Assign resource for booking request and approve\n   * @Return: ActionResponse\n   */\n  assignResource(id?: string, resourceId?: string) {\n    return this.rest.post(`${this.baseUrl}/bookings/${id}/assign/${resourceId}`, null);\n  }\n\n  /**\n   * Un assign resource from booking request\n   * @Return: ActionResponse\n   */\n  unAssignResource(id?: string) {\n    return this.rest.post(`${this.baseUrl}/bookings/${id}/un-assign`, null);\n  }\n\n  /**\n   * Merge source and target bookings and recalculate the daily planing\n   * @Return: EntitiesResponse<ActivityBookingGroup>\n   */\n  mergeBookings(day?: number, source?: string, target?: string) {\n    return this.rest.post(`${this.baseUrl}/daily/${day}/bookings/${source}/merge/${target}`, null);\n  }\n\n  /**\n   * Split booking and recalculate the daily planing\n   * @Return: EntitiesResponse<ActivityBookingGroup>\n   */\n  splitBookings(day?: number, id?: string) {\n    return this.rest.post(`${this.baseUrl}/daily/${day}/bookings/${id}/split`, null);\n  }\n\n  /**\n   * Delete booking and recalculate the daily planing\n   * @Return: EntitiesResponse<ActivityBookingGroup>\n   */\n  deleteBooking(day?: number, id?: string) {\n    return this.rest.delete(`${this.baseUrl}/daily/${day}/bookings/${id}`);\n  }\n\n  /**\n   * Delete activity and recalculate the daily planing\n   * @Return: EntitiesResponse<ActivityBookingGroup>\n   */\n  deleteActivity(day?: number, id?: string) {\n    return this.rest.delete(`${this.baseUrl}/daily/${day}/activities/${id}`);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { ResourceStatusCode } from '../enums/ResourceStatusCode';\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { Resource } from '../entities/Resource';\nimport { ResourceClassCode } from '../enums/ResourceClassCode';\nimport { ResourceTypeMask } from '../enums/ResourceTypeMask';\n\n\n/**\n * Services for managing club resources - for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (portal)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class AdminResourcesService {\n\n  // URL to web api\n  private baseUrl = '/admin/resources';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new resource\n   * @Return: EntityResponse<Resource>\n   */\n  create(body?: Resource) {\n    return this.rest.post(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update resource\n   * @Return: EntityResponse<Resource>\n   */\n  update(body?: Resource) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete resource\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get single resource by id\n   * @Return: EntityResponse<Resource>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find resources by filters\n   * @Return: QueryResponse<Resource>\n   */\n  find(search?: string, resourceClass?: ResourceClassCode, resourceType?: ResourceTypeMask, status?: ResourceStatusCode, forUseBy?: AccountRoleCode, sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (resourceClass != null) { params.push(`resourceClass=${resourceClass}`); }\n    if (resourceType != null) { params.push(`resourceType=${resourceType}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (forUseBy != null) { params.push(`forUseBy=${forUseBy}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n  /**\n   * Import bulk set of resources\n   * @Return: ActionResponse\n   */\n  bulkCreate(body?: Resource[]) {\n    return this.rest.post(`${this.baseUrl}/import`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\n\n\n/**\n * Health check service, no X-API-KEY or X-ACCESS-TOKEN are required \n */\n@Injectable()\nexport class HealthCheckService {\n\n  // URL to web api\n  private baseUrl = '/health';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Health check to test service availability\n   * @Return: ActionResponse - with version info\n   */\n  health() {\n    return this.rest.get(`${this.baseUrl}`);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { Account } from '../entities/Account';\nimport { AccountTypeCode } from '../enums/AccountTypeCode';\nimport { AccountStatusCode } from '../enums/AccountStatusCode';\n\n\n/**\n * List of account related actions for system administrator only\n * @RequestHeader X-API-KEY The key to identify the application (console)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class SysAccountsService {\n\n  // URL to web api\n  private baseUrl = '/sys/accounts';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new account\n   * @Return: EntityResponse<Account>\n   */\n  create(body?: Account) {\n    return this.rest.post(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing account in the system\n   * @Return: EntityResponse<Account>\n   */\n  update(body?: Account) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete account from the system\n   * The account is moved to DELETED mode and will be deleted after 90 days\n   * Only account marked as SUSPENDED can be deleted\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Delete account immediately without account status restrictions\n   * @Return: ActionResponse\n   */\n  purge(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/purge/${id}`);\n  }\n\n  /**\n   * Reset account - remove all operational data older than the retention time in days (events, status, log ...) but leave configuration data\n   * @Return: ActionResponse\n   */\n  reset(id?: string, days?: number) {\n    return this.rest.delete(`${this.baseUrl}/reset/${id}/days/${days}`);\n  }\n\n  /**\n   * Get single account by id\n   * @Return: EntityResponse<Account>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find list of accounts and filter\n   * @Return: QueryResponse<Account>\n   */\n  find(search?: string, type?: AccountTypeCode[], status?: AccountStatusCode[], sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { UserRegistration } from '../common/UserRegistration';\nimport { User } from '../entities/User';\nimport { UserTypeCode } from '../enums/UserTypeCode';\nimport { UserStatusCode } from '../enums/UserStatusCode';\n\n\n/**\n * List of all user related actions for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (console)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class SysUsersService {\n\n  // URL to web api\n  private baseUrl = '/sys/users';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create a new user for the current account\n   * The response includes access token valid for 20 minutes. The client side should renew the token before expiration using refresh-token method\n   * @Return: ActionResponse\n   */\n  create(body?: UserRegistration) {\n    return this.rest.post(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update user\n   * @Return: EntityResponse<User>\n   */\n  update(id?: string, body?: User) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Change user name\n   * @Return: EntityResponse<User>\n   */\n  changeName(id?: string, body?: string) {\n    return this.rest.put(`${this.baseUrl}/${id}/name`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Change user mobile\n   * @Return: EntityResponse<User>\n   */\n  changeMobile(id?: string, body?: string) {\n    return this.rest.put(`${this.baseUrl}/${id}/mobile`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Change user type\n   * @Return: EntityResponse<User>\n   */\n  changeType(id?: string, type?: UserTypeCode) {\n    return this.rest.put(`${this.baseUrl}/${id}/type/${type}`, null);\n  }\n\n  /**\n   * Change user status\n   * @Return: EntityResponse<User>\n   */\n  changeStatus(id?: string, status?: UserStatusCode) {\n    return this.rest.put(`${this.baseUrl}/${id}/status/${status}`, null);\n  }\n\n  /**\n   * Change user default account\n   * @Return: EntityResponse<User>\n   */\n  changeDefaultAccount(id?: string, accountId?: string) {\n    return this.rest.put(`${this.baseUrl}/${id}/defaultAccount/${accountId}`, null);\n  }\n\n  /**\n   * Reset password for user, generate one-time temporary password\n   * @Return: ActionResponse\n   */\n  resetPassword(id?: string) {\n    return this.rest.post(`${this.baseUrl}/${id}/reset-password`, null);\n  }\n\n  /**\n   * Delete user from the system\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get single user by Id\n   * @Return: EntityResponse<User>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find list of users by filter\n   * @Return: QueryResponse<User>\n   */\n  find(accountId?: string, search?: string, type?: UserTypeCode[], status?: UserStatusCode[], sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (accountId != null) { params.push(`accountId=${accountId}`); }\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\n\n\n/**\n * Services for managing club activities - for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (portal)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class UsrActivitiesService {\n\n  // URL to web api\n  private baseUrl = '/user/activities';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Get single activity by id\n   * @Return: EntityResponse<Activity>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find activities by time range\n   * @Return: QueryResponse<Activity>\n   */\n  find(from?: number, to?: number, year?: number, month?: number, day?: number) {\n    const params = new Array();\t\t\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (year != null) { params.push(`year=${year}`); }\n    if (month != null) { params.push(`month=${month}`); }\n    if (day != null) { params.push(`day=${day}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { Booking } from '../entities/Booking';\nimport { TimeUnitCode } from '../enums/TimeUnitCode';\n\n\n/**\n * Services for managing kayak resources - for account administrator only\n * @RequestHeader X-API-KEY The key to identify the application (portal)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class UserBookingsService {\n\n  // URL to web api\n  private baseUrl = '/user/bookings';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new booking\n   * @Return: EntityResponse<Booking>\n   */\n  create(body?: Booking) {\n    return this.rest.post(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update booking\n   * @Return: EntityResponse<Booking>\n   */\n  update(body?: Booking) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete booking\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Remove current user from booking\n   * @Return: ActionResponse\n   */\n  removeMe(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}/remove-me`);\n  }\n\n  /**\n   * Get single booking by id\n   * @Return: EntityResponse<Booking>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get extended booking info by id including names\n   * @Return: EntityResponse<Booking>\n   */\n  getExt(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}/ext`);\n  }\n\n  /**\n   * Find bookings by filters\n   * @Return: QueryResponse<Booking>\n   */\n  find(userId?: string, resourceId?: string, from?: number, to?: number, sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (userId != null) { params.push(`userId=${userId}`); }\n    if (resourceId != null) { params.push(`resourceId=${resourceId}`); }\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n  /**\n   * Find bookings history by filters\n   * @Return: QueryResponse<Booking>\n   */\n  history(userId?: string, resourceId?: string, from?: number, to?: number, sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (userId != null) { params.push(`userId=${userId}`); }\n    if (resourceId != null) { params.push(`resourceId=${resourceId}`); }\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}/history`, ...params);\n  }\n\n  /**\n   * Group my bookings by time period\n   * @Return: EntitiesResponse<BookingGroup>\n   */\n  groups(from?: number, to?: number, groupBy?: TimeUnitCode) {\n    const params = new Array();\t\t\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (groupBy != null) { params.push(`groupBy=${groupBy}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}/groups`, ...params);\n  }\n\n  /**\n   * Find list of activities groups by time period\n   * @Return: EntitiesResponse<BookingGroup>\n   */\n  activities(from?: number, to?: number, groupBy?: TimeUnitCode) {\n    const params = new Array();\t\t\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (groupBy != null) { params.push(`groupBy=${groupBy}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}/activities`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { Placement } from '../entities/Placement';\nimport { BookingStatusCode } from '../enums/BookingStatusCode';\n\n\n/**\n * Services for managing user placements (approved bookings)\n * @RequestHeader X-API-KEY The key to identify the application (portal)\n * @RequestHeader X-ACCESS-TOKEN The token to identify the logged-in user \n */\n@Injectable()\nexport class UserPlacementsService {\n\n  // URL to web api\n  private baseUrl = '/user/placements';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new placement\n   * @Return: EntityResponse<Placement>\n   */\n  create(body?: Placement) {\n    return this.rest.post(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update placement\n   * @Return: EntityResponse<Placement>\n   */\n  update(body?: Placement) {\n    return this.rest.put(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete placement\n   * @Return: ActionResponse\n   */\n  delete(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get single placement by id\n   * @Return: EntityResponse<Placement>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find placements by filters\n   * @Return: QueryResponse<Placement>\n   */\n  find(userId?: string, resourceId?: string, bookingId?: string, status?: BookingStatusCode, sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (userId != null) { params.push(`userId=${userId}`); }\n    if (resourceId != null) { params.push(`resourceId=${resourceId}`); }\n    if (bookingId != null) { params.push(`bookingId=${bookingId}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { AccountTypeCode } from '../enums/AccountTypeCode';\nimport { AccountStatusCode } from '../enums/AccountStatusCode';\n\n\n/**\n * List of account related actions \n */\n@Injectable()\nexport class UserAccountsService {\n\n  // URL to web api\n  private baseUrl = '/user/accounts';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Find list of accounts and filter\n   * @Return: QueryResponse<Account>\n   */\n  find(search?: string, type?: AccountTypeCode[], status?: AccountStatusCode[], sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n  /**\n   * Get single account by id\n   * @Return: EntityResponse<Account>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get list of user memberships\n   * @Return: EntitiesResponse<Membership>\n   */\n  getMemberships() {\n    return this.rest.get(`${this.baseUrl}/memberships`);\n  }\n\n  /**\n   * Delete membership by id\n   * @Return: ActionResponse\n   */\n  deleteMemberships(id?: string) {\n    return this.rest.delete(`${this.baseUrl}/memberships/${id}`);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { AccountRoleCode } from '../enums/AccountRoleCode';\nimport { MemberStatusCode } from '../enums/MemberStatusCode';\n\n\n/**\n * List of all user related actions for account administrator only \n */\n@Injectable()\nexport class UsrMembersService {\n\n  // URL to web api\n  private baseUrl = '/user/members';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Get single member by id (including user data)\n   * @Return: EntityResponse<MemberUser>\n   */\n  get(id?: string) {\n    return this.rest.get(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get my (logged-in user) member info (including user data)\n   * @Return: EntityResponse<MemberUser>\n   */\n  getMy() {\n    return this.rest.get(`${this.baseUrl}/my`);\n  }\n\n  /**\n   * Find list of users and filter the list\n   * System user will see all users, Account system will see all users of the account, registered user will get an error.\n   * @Return: QueryResponse<MemberUser>\n   */\n  find(search?: string, role?: AccountRoleCode[], status?: MemberStatusCode[], sort?: string, page?: number, pageSize?: number) {\n    const params = new Array();\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (role != null) { params.push(`role=${role}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (pageSize != null) { params.push(`pageSize=${pageSize}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}`, ...params);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { RestUtil } from '../../utils/rest-util';\nimport { CoreConfig } from '../../config';\n\nimport { LoginParams } from '../common/LoginParams';\nimport { ChangePasswordRequest } from '../messages/ChangePasswordRequest';\nimport { TokenRequest } from '../messages/TokenRequest';\nimport { User } from '../entities/User';\n\n\n/**\n * Services for user registration and login \n */\n@Injectable()\nexport class UserService {\n\n  // URL to web api\n  private baseUrl = '/user/user';\n\n  /**\n   * Class constructor\n   */\n  constructor(@Inject('config') private config: CoreConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Login to the system with user email and password\n   * The response includes access token valid for 20 minutes. The client side should renew the token before expiration using refresh-token method\n   * @Return: EntityResponse<LoginData>\n   */\n  login(body?: LoginParams) {\n    return this.rest.post(`${this.baseUrl}/login`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Refresh token (set new expiration time) and associate with new account if required\n   * @Return: EntityResponse<LoginData>\n   */\n  refreshToken() {\n    return this.rest.post(`${this.baseUrl}/refresh-token`, null);\n  }\n\n  /**\n   * Verify user by temporary login key\n   * @Return: EntityResponse<User>\n   */\n  verifyLoginKey(key?: string) {\n    const params = new Array();\t\t\n    if (key != null) { params.push(`key=${key}`); }\n\n\t\treturn this.rest.get(`${this.baseUrl}/login/verify`, ...params);\n  }\n\n  /**\n   * Send verification code by email\n   * @Return: ActionResponse\n   */\n  sendVerificationCode(body?: string) {\n    return this.rest.post(`${this.baseUrl}/verify`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Validate verification code and reset password\n   * @Return: ActionResponse\n   */\n  resetPassword(code?: string) {\n    return this.rest.post(`${this.baseUrl}/reset-password`, typeof code === 'object' ? JSON.stringify(code) : code);\n  }\n\n  /**\n   * Change password\n   * @Return: ActionResponse\n   */\n  changePassword(body?: ChangePasswordRequest) {\n    return this.rest.post(`${this.baseUrl}/change-password`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Check if password was used before (according to password policy)\n   * @Return: ActionResponse\n   */\n  checkUnusedPassword(body?: string) {\n    return this.rest.post(`${this.baseUrl}/check-password`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Change current user name\n   * @Return: ActionResponse\n   */\n  changeName(body?: string) {\n    return this.rest.put(`${this.baseUrl}/name`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Change current user mobile\n   * @Return: ActionResponse\n   */\n  changeMobile(body?: string) {\n    return this.rest.put(`${this.baseUrl}/mobile`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Get all user accessible accounts for the user\n   * @Return: EntitiesResponse<Account>\n   */\n  getAccounts() {\n    return this.rest.get(`${this.baseUrl}/accounts`);\n  }\n\n  /**\n   * Refresh token (set new expiration time) and associate with new account if required\n   * @Return: EntityResponse<UserAccountInfo>\n   */\n  switchAccount(body?: TokenRequest) {\n    return this.rest.post(`${this.baseUrl}/switch-account`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Get user profile\n   * @Return: EntityResponse<User>\n   */\n  getProfile() {\n    return this.rest.get(`${this.baseUrl}/profile`);\n  }\n\n  /**\n   * Update user profile\n   * @Return: EntityResponse<User>\n   */\n  setProfile(body?: User) {\n    return this.rest.put(`${this.baseUrl}/profile`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n}\n","import { AdminAccountService } from './adminAccountService';\nimport { HealthCheckService } from './healthCheckService';\nimport { SysAccountsService } from './sysAccountsService';\nimport { SysUsersService } from './sysUsersService';\nimport { AdminActivitiesService } from './adminActivitiesService';\nimport { AdminPlaningService } from './adminPlaningService';\nimport { AdminResourcesService } from './adminResourcesService';\nimport { UsrActivitiesService } from './usrActivitiesService';\nimport { UserBookingsService } from './userBookingsService';\nimport { UserPlacementsService } from './userPlacementsService';\nimport { AdminMembersService } from './adminMembersService';\nimport { UserAccountsService } from './userAccountsService';\nimport { UsrMembersService } from './usrMembersService';\nimport { UserService } from './userService';\n\nexport const Services = [\n    AdminAccountService,\n    HealthCheckService,\n    SysAccountsService,\n    SysUsersService,\n    AdminActivitiesService,\n    AdminPlaningService,\n    AdminResourcesService,\n    UsrActivitiesService,\n    UserBookingsService,\n    UserPlacementsService,\n    AdminMembersService,\n    UserAccountsService,\n    UsrMembersService,\n    UserService,\n    \n]","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Services } from './lib/services/services.export';\nimport { RestUtil } from './utils/rest-util';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreConfig } from './config';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule]\n})\nexport class CoreLibModule {\n  static forRoot(config: CoreConfig): ModuleWithProviders<CoreLibModule> {\n    // console.log(config);\n    return {\n      ngModule: CoreLibModule,\n      providers: [\n        { provide: 'config', useValue: config },\n        RestUtil,\n        ...Services\n      ]\n    };\n  }\n}\n","/* Public API Surface of ng-core-lib */\nexport * from './lib';\nexport * from './core-lib.module';\nexport * from './utils';\nexport * from './config';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AccountRoleCode","AccountStatusCode","AccountTypeCode","ActivityStatusCode","BookingStatusCode","DayOfWeekCode","EntityTypeCode","FeatureCode","KayakTypeCode","MemberStatusCode","PlacementStatusCode","ResourceClassCode","ResourceStatusCode","ResourceTypeMask","RowingBoatTypeCode","TimeUnitCode","UserGenderCode","UserStatusCode","UserTypeCode","HttpHeaders","map","catchError","LocalStorageUtil.removeToken","LocalStorageUtil.setToken","Injectable","Inject","CommonModule","HttpClientModule","NgModule"],"mappings":"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"}