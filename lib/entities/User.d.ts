import { UserGenderCode } from '../enums/UserGenderCode';
import { BaseEntity } from '../entities/BaseEntity';
import { UserTypeCode } from '../enums/UserTypeCode';
import { UserStatusCode } from '../enums/UserStatusCode';
import { AccountRole } from '../common/AccountRole';
import { IBaseEntity } from '../entities/BaseEntity';
export declare class User extends BaseEntity {
    name: string;
    email: string;
    mobile: string;
    salt: string;
    hash: string;
    type: UserTypeCode;
    status: UserStatusCode;
    suspendedOn: number;
    signInAttempts: number;
    changePassword: boolean;
    passwordChangedOn: number;
    accountRoles: AccountRole[];
    defaultAccount: string;
    description: string;
    birthday: number;
    gender: UserGenderCode;
    weight: number;
    height: number;
    shoeSize: number;
    level: number;
    memberSince: number;
    expiration: number;
    isCox: boolean;
    isMentor: boolean;
    trainingTime: number;
    restrictions: string;
    id: string;
    _type: string;
    createdOn: number;
    updatedOn: number;
}
export interface IUser extends IBaseEntity {
    name?: string;
    email?: string;
    mobile?: string;
    salt?: string;
    hash?: string;
    type?: UserTypeCode;
    status?: UserStatusCode;
    suspendedOn?: number;
    signInAttempts?: number;
    changePassword?: boolean;
    passwordChangedOn?: number;
    accountRoles?: AccountRole[];
    defaultAccount?: string;
    description?: string;
    birthday?: number;
    gender?: UserGenderCode;
    weight?: number;
    height?: number;
    shoeSize?: number;
    level?: number;
    memberSince?: number;
    expiration?: number;
    isCox?: boolean;
    isMentor?: boolean;
    trainingTime?: number;
    restrictions?: string;
    id?: string;
    _type?: string;
    createdOn?: number;
    updatedOn?: number;
}
